# quad abort_noattach no
#
# If set to _yes_, when composing messages containing the regular
# expression specified by $$abort_noattach_regex and no attachments are
# given, composition will be aborted. If set to _no_, composing messages
# as such will never be aborted.
# 
# Example:
# ```
# set abort_noattach_regex = "\<attach(|ed|ments?)\>"
# ```

# regex abort_noattach_regex "\\<(attach|attached|attachments?)\\>"
#
# Specifies a regular expression to match against the body of the message, to
# determine if an attachment was mentioned but mistakenly forgotten.  If it
# matches, $$abort_noattach will be consulted to determine if message sending
# will be aborted.
# 
# Like other regular expressions in NeoMutt, the search is case sensitive
# if the pattern contains at least one upper case letter, and case
# insensitive otherwise.

# quad abort_nosubject yes
#
# If set to _yes_, when composing messages and no subject is given
# at the subject prompt, composition will be aborted.  If set to
# _no_, composing messages with no subject given at the subject
# prompt will never be aborted.

# quad abort_unmodified no
#
# If set to _yes_, composition will automatically abort after
# editing the message body if no changes are made to the file (this
# check only happens after the _first_ edit of the file).  When set
# to _no_, composition will never be aborted.

# string alias_file "~/.mutt/alias/extra"
#
# The default file in which to save aliases created by the
# `$<create-alias>` function. Entries added to this file are
# encoded in the character set specified by $$config_charset if it
# is _set_ or the current character set otherwise.
# 
# **Note:** NeoMutt will not automatically source this file; you must
# explicitly use the "$source" command for it to be executed in case
# this option points to a dedicated alias file.
# 
# The default for this option is the currently used neomuttrc file, or
# "~/.neomuttrc" if no user neomuttrc was found.

# string alias_format "%4n %2f %t %-10a   %r"
#
# Specifies the format of the data displayed for the "$alias" menu.  The
# following `printf(3)`-style sequences are available:
# 
# | .  | Description |
# |----+----------------------------------------------------------------|
# | %a | Alias name |
# | %f | Flags - currently, a "d" for an alias marked for deletion |
# | %n | Index number |
# | %r | Address which alias expands to |
# | %t | Character which indicates if the alias is tagged for inclusion |

# boolean allow_8bit yes
#
# Controls whether 8-bit data is converted to 7-bit using either Quoted-
# Printable or Base64 encoding when sending mail.

# boolean allow_ansi yes
#
# Controls whether ANSI color codes in messages (and color tags in
# rich text messages) are to be interpreted.
# Messages containing these codes are rare, but if this option is _set_,
# their text will be colored accordingly. Note that this may override
# your color choices, and even present a security problem, since a
# message could include a line like
# ```
# [-- PGP output follows ...
# ```
# 
# and give it the same color as your attachment color (see also
# $$crypt_timestamp).

# boolean arrow_cursor no
#
# When _set_, an arrow ("->") will be used to indicate the current entry
# in menus instead of highlighting the whole line.  On slow network or modem
# links this will make response faster because there is less that has to
# be redrawn on the screen when moving to the next or previous entries
# in the menu.

# boolean ascii_chars no
#
# If _set_, NeoMutt will use plain ASCII characters when displaying thread
# and attachment trees, instead of the default _ACS_ characters.

# boolean ask_follow_up no
#
# If set, NeoMutt will prompt you for follow-up groups before editing
# the body of an outgoing message.

# boolean ask_x_comment_to no
#
# If set, NeoMutt will prompt you for x-comment-to field before editing
# the body of an outgoing message.

# boolean askbcc no
#
# If _set_, NeoMutt will prompt you for blind-carbon-copy (Bcc) recipients
# before editing an outgoing message.

# boolean askcc no
#
# If _set_, NeoMutt will prompt you for carbon-copy (Cc) recipients before
# editing the body of an outgoing message.

# string assumed_charset ""
#
# This variable is a colon-separated list of character encoding
# schemes for messages without character encoding indication.
# Header field values and message body content without character encoding
# indication would be assumed that they are written in one of this list.
# By default, all the header fields and message body without any charset
# indication are assumed to be in "us-ascii".
# 
# For example, Japanese users might prefer this:
# ```
# set assumed_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"
# ```
# 
# However, only the first content is valid for the message body.

# string attach_charset ""
#
# This variable is a colon-separated list of character encoding
# schemes for text file attachments. NeoMutt uses this setting to guess
# which encoding files being attached are encoded in to convert them to
# a proper character set given in $$send_charset.
# 
# If _unset_, the value of $$charset will be used instead.
# For example, the following configuration would work for Japanese
# text handling:
# ```
# set attach_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"
# ```
# 
# Note: for Japanese users, "iso-2022-*" must be put at the head
# of the value as shown above if included.

# string attach_format "%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "
#
# This variable describes the format of the "attachment" menu.  The
# following `printf(3)`-style sequences are understood:
# 
# | .   | Description |
# |-----+----------------------------------------------------------------------------------------------------------------------------------|
# | %C  | Charset |
# | %c  | Requires charset conversion ("n" or "c") |
# | %D  | Deleted flag |
# | %d  | Description (if none, falls back to %F) |
# | %e  | MIME content-transfer-encoding |
# | %f  | Filename |
# | %F  | Filename in content-disposition header (if none, falls back to %f) |
# | %I  | Disposition ("I" for inline, "A" for attachment) |
# | %m  | Major MIME type |
# | %M  | MIME subtype |
# | %n  | Attachment number |
# | %Q  | "Q", if MIME part qualifies for attachment counting |
# | %s  | Size (see $formatstrings-size) |
# | %T  | Graphic tree characters |
# | %t  | Tagged flag |
# | %u  | Unlink (=to delete) flag |
# | %X  | Number of qualifying MIME parts in this part and its children (please see the "$attachments" section for possible speed effects) |
# | %>X | Right justify the rest of the string and pad with character "X" |
# | %|X | Pad to the end of the line with character "X" |
# | %*X | Soft-fill with character "X" as pad |
# 
# For an explanation of "soft-fill", see the $$index_format documentation.

# string attach_save_dir "./"
#
# The directory where attachments are saved.

# boolean attach_save_without_prompting no
#
# This variable, when set to true, will cause attachments to be saved to
# the 'attach_save_dir' location without prompting the user for the filename.
# 

# string attach_sep "\n"
#
# The separator to add between attachments when operating (saving,
# printing, piping, etc) on a list of tagged attachments.

# boolean attach_split yes
#
# If this variable is _unset_, when operating (saving, printing, piping,
# etc) on a list of tagged attachments, NeoMutt will concatenate the
# attachments and will operate on them as a single attachment. The
# $$attach_sep separator is added after each attachment. When _set_,
# NeoMutt will operate on the attachments one by one.

# string attribution "On %d, %n wrote:"
#
# This is the string that will precede a message which has been included
# in a reply.  For a full listing of defined `printf(3)`-like sequences see
# the section on $$index_format.

# string attribution_locale ""
#
# The locale used by `strftime(3)` to format dates in the
# $attribution string.  Legal values are the strings your system
# accepts for the locale environment variable `$$$LC_TIME`.
# 
# This variable is to allow the attribution date format to be
# customized by recipient or folder using hooks.  By default, NeoMutt
# will use your locale environment, so there is no need to set
# this except to override that default.

# boolean auto_subscribe no
#
# When _set_, NeoMutt assumes the presence of a List-Post header
# means the recipient is subscribed to the list.  Unless the mailing list
# is in the "unsubscribe" or "unlist" lists, it will be added
# to the "$subscribe" list.  Parsing and checking these things slows
# header reading down, so this option is disabled by default.

# boolean auto_tag no
#
# When _set_, functions in the _index_ menu which affect a message
# will be applied to all tagged messages (if there are any).  When
# unset, you must first use the `<tag-prefix>` function (bound to ";"
# by default) to make the next function apply to all tagged messages.

# boolean autocrypt no
#
# When _set_, enables autocrypt, which provides
# passive encryption protection with keys exchanged via headers.
# See ``$autocryptdoc'' for more details.
# (Autocrypt only)

# string autocrypt_acct_format "%4n %-30a %20p %10s"
#
# This variable describes the format of the ``autocrypt account'' menu.
# The following `printf(3)`-style sequences are understood
# 
# | .  | Description |
# |----+-------------------------------|
# | %a | email address |
# | %k | gpg keyid |
# | %n | current entry number |
# | %p | prefer-encrypt flag |
# | %s | status flag (active/inactive) |
# 
# (Autocrypt only)

# string autocrypt_dir "~/.mutt/autocrypt"
#
# This variable sets where autocrypt files are stored, including the GPG
# keyring and sqlite database.  See ``$autocryptdoc'' for more details.
# (Autocrypt only)

# boolean autocrypt_reply yes
#
# When _set_, replying to an autocrypt email automatically
# enables autocrypt in the reply.  You may want to unset this if you're using
# the same key for autocrypt as normal web-of-trust, so that autocrypt
# isn't forced on for all encrypted replies.
# (Autocrypt only)

# boolean autoedit no
#
# When _set_ along with $$edit_headers, NeoMutt will skip the initial
# send-menu (prompting for subject and recipients) and allow you to
# immediately begin editing the body of your
# message.  The send-menu may still be accessed once you have finished
# editing the body of your message.
# 
# **Note:** when this option is _set_, you can't use send-hooks that depend
# on the recipients when composing a new (non-reply) message, as the initial
# list of recipients is empty.
# 
# Also see $$fast_reply.

# boolean beep no
#
# When this variable is _set_, NeoMutt will beep when an error occurs.

# boolean beep_new no
#
# When this variable is _set_, NeoMutt will beep whenever it prints a message
# notifying you of new mail.  This is independent of the setting of the
# $$beep variable.

# quad bounce ask-yes
#
# Controls whether you will be asked to confirm bouncing messages.
# If set to _yes_ you don't get asked if you want to bounce a
# message. Setting this variable to _no_ is not generally useful,
# and thus not recommended, because you are unable to bounce messages.

# boolean bounce_delivered yes
#
# When this variable is _set_, NeoMutt will include Delivered-To headers when
# bouncing messages.  Postfix users may wish to _unset_ this variable.

# boolean braille_friendly no
#
# When this variable is _set_, NeoMutt will place the cursor at the beginning
# of the current line in menus, even when the $$arrow_cursor variable
# is _unset_, making it easier for blind persons using Braille displays to
# follow these menus.  The option is _unset_ by default because many
# visual terminals don't permit making the cursor invisible.

# boolean browser_abbreviate_mailboxes yes
#
# When this variable is _set_, NeoMutt will abbreviate mailbox
# names in the browser mailbox list, using '~' and '='
# shortcuts.
# 
# The default `"alpha"` setting of $$sort_browser uses
# locale-based sorting (using `strcoll(3)`), which ignores some
# punctuation.  This can lead to some situations where the order
# doesn't make intuitive sense.  In those cases, it may be
# desirable to _unset_ this variable.

# quad catchup_newsgroup ask-yes
#
# If this variable is _set_, NeoMutt will mark all articles in newsgroup
# as read when you quit the newsgroup (catchup newsgroup).

# string certificate_file "~/.mutt_certificates"
#
# This variable specifies the file where the certificates you trust
# are saved. When an unknown certificate is encountered, you are asked
# if you accept it or not. If you accept it, the certificate can also
# be saved in this file and further connections are automatically
# accepted.
# 
# You can also manually add CA certificates in this file. Any server
# certificate that is signed with one of these CA certificates is
# also automatically accepted.
# 
# Example:
# ```
# set certificate_file=~/.neomutt/certificates
# ```

# boolean change_folder_next no
#
# When this variable is _set_, the `<change-folder>` function
# mailbox suggestion will start at the next folder in your "$mailboxes"
# list, instead of starting at the first folder in the list.

# string charset "utf-8"
#
# Character set your terminal uses to display and enter textual data.
# It is also the fallback for $$send_charset.
# 
# Upon startup NeoMutt tries to derive this value from environment variables
# such as `$$$LC_CTYPE` or `$$$LANG`.
# 
# **Note:** It should only be set in case NeoMutt isn't able to determine the
# character set used correctly.

# boolean check_mbox_size no
#
# When this variable is _set_, NeoMutt will use file size attribute instead of
# access time when checking for new mail in mbox and mmdf folders.
# 
# This variable is _unset_ by default and should only be enabled when
# new mail detection for these folder types is unreliable or doesn't work.
# 
# Note that enabling this variable should happen before any "$mailboxes"
# directives occur in configuration files regarding mbox or mmdf folders
# because NeoMutt needs to determine the initial new mail status of such a
# mailbox by performing a fast mailbox scan when it is defined.
# Afterwards the new mail status is tracked by file size changes.

# boolean check_new yes
#
# **Note:** this option only affects _maildir_ and _MH_ style
# mailboxes.
# 
# When _set_, NeoMutt will check for new mail delivered while the
# mailbox is open.  Especially with MH mailboxes, this operation can
# take quite some time since it involves scanning the directory and
# checking each file to see if it has already been looked at.  If
# this variable is _unset_, no check for new mail is performed
# while the mailbox is open.

# boolean collapse_all no
#
# When _set_, NeoMutt will collapse all threads when entering a folder.

# boolean collapse_flagged yes
#
# When _unset_, NeoMutt will not collapse a thread if it contains any
# flagged messages.

# boolean collapse_unread yes
#
# When _unset_, NeoMutt will not collapse a thread if it contains any
# unread messages.

# string compose_format "-- NeoMutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"
#
# Controls the format of the status line displayed in the "compose"
# menu.  This string is similar to $$status_format, but has its own
# set of `printf(3)`-like sequences:
# 
# | .  | Description |
# |----+------------------------------------------------------------------------------|
# | %a | Total number of attachments |
# | %h | Local hostname |
# | %l | Approximate size (in bytes) of the current message (see $formatstrings-size) |
# | %v | NeoMutt version string |
# 
# See the text describing the $$status_format option for more
# information on how to set $$compose_format.

# string config_charset ""
#
# When defined, NeoMutt will recode commands in rc files from this
# encoding to the current character set as specified by $$charset
# and aliases written to $$alias_file from the current character set.
# 
# Please note that if setting $$charset it must be done before
# setting $$config_charset.
# 
# Recoding should be avoided as it may render unconvertable
# characters as question marks which can lead to undesired
# side effects (for example in regular expressions).

# boolean confirmappend no
#
# When _set_, NeoMutt will prompt for confirmation when appending messages to
# an existing mailbox.

# boolean confirmcreate no
#
# When _set_, NeoMutt will prompt for confirmation when saving messages to a
# mailbox which does not yet exist before creating it.

# number connect_timeout 30
#
# Causes NeoMutt to timeout a network connection (for IMAP, POP or SMTP) after this
# many seconds if the connection is not able to be established.  A negative
# value causes NeoMutt to wait indefinitely for the connection attempt to succeed.

# string content_type "text/plain"
#
# Sets the default Content-Type for the body of newly composed messages.

# quad copy yes
#
# This variable controls whether or not copies of your outgoing messages
# will be saved for later references.  Also see $$record,
# $$save_name, $$force_name and "$fcc-hook".

# boolean crypt_autoencrypt no
#
# Setting this variable will cause NeoMutt to always attempt to PGP
# encrypt outgoing messages.  This is probably only useful in
# connection to the "$send-hook" command.  It can be overridden
# by use of the pgp menu, when encryption is not required or
# signing is requested as well.  If $$smime_is_default is _set_,
# then OpenSSL is used instead to create S/MIME messages and
# settings can be overridden by use of the smime menu instead.
# (Crypto only)

# boolean crypt_autopgp yes
#
# This variable controls whether or not NeoMutt may automatically enable
# PGP encryption/signing for messages.  See also $$crypt_autoencrypt,
# $$crypt_replyencrypt,
# $$crypt_autosign, $$crypt_replysign and $$smime_is_default.

# boolean crypt_autosign no
#
# Setting this variable will cause NeoMutt to always attempt to
# cryptographically sign outgoing messages.  This can be overridden
# by use of the pgp menu, when signing is not required or
# encryption is requested as well. If $$smime_is_default is _set_,
# then OpenSSL is used instead to create S/MIME messages and settings can
# be overridden by use of the smime menu instead of the pgp menu.
# (Crypto only)

# boolean crypt_autosmime yes
#
# This variable controls whether or not NeoMutt may automatically enable
# S/MIME encryption/signing for messages. See also $$crypt_autoencrypt,
# $$crypt_replyencrypt,
# $$crypt_autosign, $$crypt_replysign and $$smime_is_default.

# mbtable crypt_chars "SPsK "
#
# Controls the characters used in cryptography flags.
# 
# | Character | Default | Description |
# |-----------+---------+-----------------------------------------------------------------|
# | 1         | S       | The mail is signed, and the signature is successfully verified. |
# | 2         | P       | The mail is PGP encrypted. |
# | 3         | s       | The mail is signed. |
# | 4         | K       | The mail contains a PGP public key. |
# | 5         | <space> | The mail has no crypto info. |

# boolean crypt_confirmhook yes
#
# If set, then you will be prompted for confirmation of keys when using
# the _crypt-hook_ command.  If unset, no such confirmation prompt will
# be presented.  This is generally considered unsafe, especially where
# typos are concerned.

# boolean crypt_opportunistic_encrypt no
#
# Setting this variable will cause NeoMutt to automatically enable and
# disable encryption, based on whether all message recipient keys
# can be located by NeoMutt.
# 
# When this option is enabled, NeoMutt will enable/disable encryption
# each time the TO, CC, and BCC lists are edited.  If
# $$edit_headers is set, NeoMutt will also do so each time the message
# is edited.
# 
# While this is set, encryption can't be manually enabled/disabled.
# The pgp or smime menus provide a selection to temporarily disable
# this option for the current message.
# 
# If $$crypt_autoencrypt or $$crypt_replyencrypt enable encryption for
# a message, this option will be disabled for that message.  It can
# be manually re-enabled in the pgp or smime menus.
# (Crypto only)

# boolean crypt_protected_headers_read yes
#
# When set, NeoMutt will display protected headers ("Memory Hole") in the pager,
# and will update the index and header cache with revised headers.
# **
# Protected headers are stored inside the encrypted or signed part of an
# an email, to prevent disclosure or tampering.
# For more information see https://github.com/autocrypt/memoryhole.
# Currently NeoMutt only supports the Subject header.
# 
# Encrypted messages using protected headers often substitute the exposed
# Subject header with a dummy value (see $$crypt_protected_headers_subject).
# NeoMutt will update its concept of the correct subject **after** the
# message is opened, i.e. via the `<display-message>` function.
# If you reply to a message before opening it, NeoMutt will end up using
# the dummy Subject header, so be sure to open such a message first.
# (Crypto only)

# boolean crypt_protected_headers_save no
#
# When $$crypt_protected_headers_read is set, and a message with a
# protected Subject is opened, NeoMutt will save the updated Subject
# into the header cache by default.  This allows searching/limiting
# based on the protected Subject header if the mailbox is
# re-opened, without having to re-open the message each time.
# However, for mbox/mh mailbox types, or if header caching is not
# set up, you would need to re-open the message each time the
# mailbox was reopened before you could see or search/limit on the
# protected subject again.
# 
# When this variable is set, NeoMutt additionally saves the protected
# Subject back **in the clear-text message headers**.  This
# provides better usability, but with the tradeoff of reduced
# security.  The protected Subject header, which may have
# previously been encrypted, is now stored in clear-text in the
# message headers.  Copying the message elsewhere, via NeoMutt or
# external tools, could expose this previously encrypted data.
# Please make sure you understand the consequences of this before
# you enable this variable.
# (Crypto only)

# string crypt_protected_headers_subject "Encrypted subject"
#
# When $$crypt_protected_headers_write is set, and the message is marked
# for encryption, this will be substituted into the Subject field in the
# message headers.
# **
# To prevent a subject from being substituted, unset this variable, or set it
# to the empty string.
# (Crypto only)

# boolean crypt_protected_headers_write no
#
# When set, NeoMutt will generate protected headers ("Memory Hole") for
# signed and encrypted emails.
# **
# Protected headers are stored inside the encrypted or signed part of an
# an email, to prevent disclosure or tampering.
# For more information see https://github.com/autocrypt/memoryhole.
# **
# Currently NeoMutt only supports the Subject header.
# (Crypto only)

# boolean crypt_replyencrypt yes
#
# If _set_, automatically PGP or OpenSSL encrypt replies to messages which are
# encrypted.
# (Crypto only)

# boolean crypt_replysign no
#
# If _set_, automatically PGP or OpenSSL sign replies to messages which are
# signed.
# 
# **Note:** this does not work on messages that are encrypted
# _and_ signed!
# (Crypto only)

# boolean crypt_replysignencrypted no
#
# If _set_, automatically PGP or OpenSSL sign replies to messages
# which are encrypted. This makes sense in combination with
# $$crypt_replyencrypt, because it allows you to sign all
# messages which are automatically encrypted.  This works around
# the problem noted in $$crypt_replysign, that NeoMutt is not able
# to find out whether an encrypted message is also signed.
# (Crypto only)

# boolean crypt_timestamp yes
#
# If _set_, NeoMutt will include a time stamp in the lines surrounding
# PGP or S/MIME output, so spoofing such lines is more difficult.
# If you are using colors to mark these lines, and rely on these,
# you may _unset_ this setting.
# (Crypto only)

# boolean crypt_use_gpgme no
#
# This variable controls the use of the GPGME-enabled crypto backends.
# If it is _set_ and NeoMutt was built with gpgme support, the gpgme code for
# S/MIME and PGP will be used instead of the classic code.  Note that
# you need to set this option in .neomuttrc; it won't have any effect when
# used interactively.
# 
# Note that the GPGME backend does not support creating old-style inline
# (traditional) PGP encrypted or signed messages (see $$pgp_autoinline).

# boolean crypt_use_pka no
#
# Controls whether NeoMutt uses PKA
# (see http://www.g10code.de/docs/pka-intro.de.pdf) during signature
# verification (only supported by the GPGME backend).

# quad crypt_verify_sig yes
#
# If "_yes_", always attempt to verify PGP or S/MIME signatures.
# If "_ask-*_", ask whether or not to verify the signature.
# If "_no_", never attempt to verify cryptographic signatures.
# (Crypto only)

# string date_format "!%a, %b %d, %Y at %I:%M:%S%p %Z"
#
# This variable controls the format of the date printed by the "%d"
# sequence in $$index_format.  This is passed to the `strftime(3)`
# function to process the date, see the man page for the proper syntax.
# 
# Unless the first character in the string is a bang ("!"), the month
# and week day names are expanded according to the locale.
# If the first character in the string is a
# bang, the bang is discarded, and the month and week day names in the
# rest of the string are expanded in the _C_ locale (that is in US
# English).

# string debug_file "~/.neomuttdebug"
#
# Debug logging is controlled by the variables `$$debug_file` and `$$debug_level`.
# `$$debug_file` specifies the root of the filename.  NeoMutt will add "0" to the end.
# Each time NeoMutt is run with logging enabled, the log files are rotated.
# A maximum of five log files are kept, numbered 0 (most recent) to 4 (oldest).
# 
# This option can be enabled on the command line, "neomutt -l mylog"
# 
# See also: `$$debug_level`

# number debug_level 6
#
# Debug logging is controlled by the variables `$$debug_file` and `$$debug_level`.
# 
# The debug level controls how much information is saved to the log file.
# If you have a problem with NeoMutt, then enabling logging may help find the cause.
# Levels 1-3 will usually provide enough information for writing a bug report.
# Levels 4,5 will be extremely verbose.
# 
# Warning: Logging at high levels may save private information to the file.
# 
# This option can be enabled on the command line, "neomutt -d 2"
# 
# See also: `$$debug_file`

# string default_hook "~f %s !~P | (~P ~C %s)"
#
# This variable controls how "$message-hook", "$reply-hook", "$send-hook",
# "$send2-hook", "$save-hook", and "$fcc-hook" will
# be interpreted if they are specified with only a simple regex,
# instead of a matching pattern.  The hooks are expanded when they are
# declared, so a hook will be interpreted according to the value of this
# variable at the time the hook is declared.
# 
# The default value matches
# if the message is either from a user matching the regular expression
# given, or if it is from you (if the from address matches
# "$alternates") and is to or cc'ed to a user matching the given
# regular expression.

# quad delete yes
#
# Controls whether or not messages are really deleted when closing or
# synchronizing a mailbox.  If set to _yes_, messages marked for
# deleting will automatically be purged without prompting.  If set to
# _no_, messages marked for deletion will be kept in the mailbox.

# boolean delete_untag yes
#
# If this option is _set_, NeoMutt will untag messages when marking them
# for deletion.  This applies when you either explicitly delete a message,
# or when you save it to another folder.

# boolean digest_collapse yes
#
# If this option is _set_, NeoMutt's received-attachments menu will not show the subparts of
# individual messages in a multipart/digest.  To see these subparts, press "v" on that menu.

# string display_filter ""
#
# When set, specifies a command used to filter messages.  When a message
# is viewed it is passed as standard input to $$display_filter, and the
# filtered message is read from the standard output.
# 
# When preparing the message, NeoMutt inserts some escape sequences into the
# text.  They are of the form: `<esc>]9;XXX<bel>` where "XXX" is a random
# 64-bit number.
# 
# If these escape sequences interfere with your filter, they can be removed
# using a tool like `ansifilter` or `sed 's/^]9;[0-9]\+//'`
# 
# If they are removed, then PGP and MIME headers will no longer be coloured.
# This can be fixed by adding this to your config:
# `color body magenta default '^\[-- .* --\]$$$'`.

# string dsn_notify ""
#
# This variable sets the request for when notification is returned.  The
# string consists of a comma separated list (no spaces!) of one or more
# of the following: _never_, to never request notification,
# _failure_, to request notification on transmission failure,
# _delay_, to be notified of message delays, _success_, to be
# notified of successful transmission.
# 
# Example:
# ```
# set dsn_notify="failure,delay"
# ```
# 
# **Note:** when using $$sendmail for delivery, you should not enable
# this unless you are either using Sendmail 8.8.x or greater or a MTA
# providing a `sendmail(1)`-compatible interface supporting the `-N` option
# for DSN. For SMTP delivery, DSN support is auto-detected so that it
# depends on the server whether DSN will be used or not.

# string dsn_return ""
#
# This variable controls how much of your message is returned in DSN
# messages.  It may be set to either _hdrs_ to return just the
# message header, or _full_ to return the full message.
# 
# Example:
# ```
# set dsn_return=hdrs
# ```
# 
# **Note:** when using $$sendmail for delivery, you should not enable
# this unless you are either using Sendmail 8.8.x or greater or a MTA
# providing a `sendmail(1)`-compatible interface supporting the `-R` option
# for DSN. For SMTP delivery, DSN support is auto-detected so that it
# depends on the server whether DSN will be used or not.

# boolean duplicate_threads yes
#
# This variable controls whether NeoMutt, when $$sort is set to _threads_, threads
# messages with the same Message-Id together.  If it is _set_, it will indicate
# that it thinks they are duplicates of each other with an equals sign
# in the thread tree.

# boolean edit_headers yes
#
# This option allows you to edit the header of your outgoing messages
# along with the body of your message.
# 
# Although the compose menu may have localized header labels, the
# labels passed to your editor will be standard RFC2822 headers,
# (e.g. To:, Cc:, Subject:).  Headers added in your editor must
# also be RFC2822 headers, or one of the pseudo headers listed in
# "$edit-header".  NeoMutt will not understand localized header
# labels, just as it would not when parsing an actual email.
# 
# **Note** that changes made to the References: and Date: headers are
# ignored for interoperability reasons.

# string editor "/usr/bin/nvim"
#
# This variable specifies which editor is used by NeoMutt.
# It defaults to the value of the `$$$VISUAL`, or `$$$EDITOR`, environment
# variable, or to the string "vi" if neither of those are set.
# 
# The `$$editor` string may contain a _%s_ escape, which will be replaced by the name
# of the file to be edited.  If the _%s_ escape does not appear in `$$editor`, a
# space and the name to be edited are appended.
# 
# The resulting string is then executed by running
# ```
# sh -c 'string'
# ```
# 
# where _string_ is the expansion of `$$editor` described above.

# string empty_subject "Re: your mail"
#
# This variable specifies the subject to be used when replying to an email
# with an empty subject.  It defaults to "Re: your mail".

# boolean encode_from no
#
# When _set_, NeoMutt will quoted-printable encode messages when
# they contain the string "From " (note the trailing space) in the beginning of a line.
# This is useful to avoid the tampering certain mail delivery and transport
# agents tend to do with messages (in order to prevent tools from
# misinterpreting the line as a mbox message separator).

# address envelope_from_address ""
#
# Manually sets the _envelope_ sender for outgoing messages.
# This value is ignored if $$use_envelope_from is _unset_.

# string escape "~"
#
# Escape character to use for functions in the built-in editor.

# string external_search_command ""
#
# If set, contains the name of the external program used by "~I" patterns.
# This will usually be a wrapper script around mairix, mu, or similar
# indexers other than notmuch (for which there is optional special support).
# 
# Here is an example how it works.  Let's assume $$external_search_command
# is set to "mairix_filter", and mairix_filter is a script which
# runs the old but well loved mairix indexer with the arguments
# given to mairix_filter, in the "raw" mode of mairix, producing
# on the standard output a list of Message-IDs, one per line.
# 
# If possible, it also filters down the results coming from mairix
# such that only messages in the current folder remain.  It can do
# this because it gets a hidden first argument which is the path
# to the folder.
# (This can be the type of clean and simple script called a _one-liner_.)
# 
# Now if NeoMutt gets a limit or tag command followed by the pattern
# "~I '-t s:bleeping='", mairix_filter runs mairix with the
# arguments from inside the quotes (the quotes are needed because
# of the space after "-t"), mairix finds all messages with
# "bleeping" in the Subject plus all messages sharing threads
# with these and outputs their file names, and mairix_filter
# translates the file names into Message-IDs.  Finally, NeoMutt
# reads the Message-IDs and targets the matching messages with the
# command given to it.
# 
# You, the user, still have to rewrite the mairix_filter script to
# match the behavior of your indexer, but this should help users
# of indexers other than notmuch to integrate them cleanly with NeoMutt.

# boolean fast_reply yes
#
# When _set_, the initial prompt for recipients and subject are skipped
# when replying to messages, and the initial prompt for subject is
# skipped when forwarding messages.
# 
# **Note:** this variable has no effect when the $$autoedit
# variable is _set_.

# quad fcc_attach yes
#
# This variable controls whether or not attachments on outgoing messages
# are saved along with the main body of your message.

# boolean fcc_before_send no
#
# When this variable is _set_, FCCs will occur before sending
# the message.  Before sending, the message cannot be manipulated,
# so it will be stored the exact same as sent:
# $$fcc_attach and $$fcc_clear will be ignored (using their default
# values).
# 
# When _unset_, the default, FCCs will occur after sending.
# Variables $$fcc_attach and $$fcc_clear will be respected, allowing
# it to be stored without attachments or encryption/signing if
# desired.

# boolean fcc_clear yes
#
# When this variable is _set_, FCCs will be stored unencrypted and
# unsigned, even when the actual message is encrypted and/or
# signed.
# (PGP only)

# mbtable flag_chars "*!DdrONon- "
#
# Controls the characters used in several flags.
# 
# | Character | Default | Description |
# |-----------+---------+-----------------------------------------------|
# | 1         | *       | The mail is tagged. |
# | 2         | !       | The mail is flagged as important. |
# | 3         | D       | The mail is marked for deletion. |
# | 4         | d       | The mail has attachments marked for deletion. |
# | 5         | r       | The mail has been replied to. |
# | 6         | O       | The mail is Old (Unread but seen). |
# | 7         | N       | The mail is New (Unread but not seen). |
# | 8         | o       | The mail thread is Old (Unread but seen). |
# | 9         | n       | The mail thread is New (Unread but not seen). |
# | 10        | -       | The mail is read - %S expando. |
# | 11        | <space> | The mail is read - %Z expando. |

# boolean flag_safe no
#
# If set, flagged messages can't be deleted.

# string folder "imaps://flatcap.org/"
#
# Specifies the default location of your mailboxes.  A "+" or "=" at the
# beginning of a pathname will be expanded to the value of this
# variable.  Note that if you change this variable (from the default)
# value you need to make sure that the assignment occurs _before_
# you use "+" or "=" for any other variables since expansion takes place
# when handling the "$mailboxes" command.

# string folder_format "%2C %t %?N?%3N&   ? %f%* %s"
#
# This variable allows you to customize the file browser display to your
# personal taste.  This string is similar to $$index_format, but has
# its own set of `printf(3)`-like sequences:
# 
# | .   | Description |
# |-----+--------------------------------------------------------------------------------------------------|
# | %C  | Current file number |
# | %d  | Date/time folder was last modified |
# | %D  | Date/time folder was last modified using $$date_format. |
# | %f  | Filename ("/" is appended to directory names, "@" to symbolic links and "*" to executable files) |
# | %F  | File permissions |
# | %g  | Group name (or numeric gid, if missing) |
# | %i  | Description of the folder |
# | %l  | Number of hard links |
# | %m  | Number of messages in the mailbox * |
# | %n  | Number of unread messages in the mailbox * |
# | %N  | "N" if mailbox has new mail, blank otherwise |
# | %s  | Size in bytes (see $formatstrings-size) |
# | %t  | "*" if the file is tagged, blank otherwise |
# | %u  | Owner name (or numeric uid, if missing) |
# | %>X | Right justify the rest of the string and pad with character "X" |
# | %|X | Pad to the end of the line with character "X" |
# | %*X | Soft-fill with character "X" as pad |
# 
# For an explanation of "soft-fill", see the $$index_format documentation.
# 
# * = can be optionally printed if nonzero
# 
# %m, %n, and %N only work for monitored mailboxes.
# %m requires $$mail_check_stats to be set.
# %n requires $$mail_check_stats to be set (except for IMAP mailboxes).

# boolean followup_to yes
#
# Controls whether or not the "Mail-Followup-To:" header field is
# generated when sending mail.  When _set_, NeoMutt will generate this
# field when you are replying to a known mailing list, specified with
# the "$subscribe" or "$lists" commands.
# 
# This field has two purposes.  First, preventing you from
# receiving duplicate copies of replies to messages which you send
# to mailing lists, and second, ensuring that you do get a reply
# separately for any messages sent to known lists to which you are
# not subscribed.
# 
# The header will contain only the list's address
# for subscribed lists, and both the list address and your own
# email address for unsubscribed lists.  Without this header, a
# group reply to your message sent to a subscribed list will be
# sent to both the list and your address, resulting in two copies
# of the same email for you.

# quad followup_to_poster ask-yes
#
# If this variable is _set_ and the keyword "poster" is present in
# _Followup-To_ header, follow-up to newsgroup function is not
# permitted.  The message will be mailed to the submitter of the
# message via mail.

# boolean force_name no
#
# This variable is similar to $$save_name, except that NeoMutt will
# store a copy of your outgoing message by the username of the address
# you are sending to even if that mailbox does not exist.
# 
# Also see the $$record variable.

# quad forward_attachments ask-yes
#
# When forwarding inline (i.e. $$mime_forward _unset_ or
# answered with ``no'' and $$forward_decode _set_), attachments
# which cannot be decoded in a reasonable manner will be attached
# to the newly composed message if this quadoption is _set_ or
# answered with ``yes''.

# string forward_attribution_intro "----- Forwarded message from %f -----"
#
# This is the string that will precede a message which has been forwarded
# in the main body of a message (when $$mime_forward is unset).
# For a full listing of defined `printf(3)`-like sequences see
# the section on $$index_format.  See also $$attribution_locale.

# string forward_attribution_trailer "----- End forwarded message -----"
#
# This is the string that will follow a message which has been forwarded
# in the main body of a message (when $$mime_forward is unset).
# For a full listing of defined `printf(3)`-like sequences see
# the section on $$index_format.  See also $$attribution_locale.

# boolean forward_decode yes
#
# Controls the decoding of complex MIME messages into `text/plain` when
# forwarding a message.  The message header is also RFC2047 decoded.
# This variable is only used, if $$mime_forward is _unset_,
# otherwise $$mime_forward_decode is used instead.

# boolean forward_decrypt yes
#
# Controls the handling of encrypted messages when forwarding a message.
# When _set_, the outer layer of encryption is stripped off.  This
# variable is only used if $$mime_forward is _set_ and
# $$mime_forward_decode is _unset_.
# (PGP only)

# quad forward_edit yes
#
# This quadoption controls whether or not the user is automatically
# placed in the editor when forwarding messages.  For those who always want
# to forward with no modification, use a setting of "no".

# string forward_format "[%a: %s]"
#
# This variable controls the default subject when forwarding a message.
# It uses the same format sequences as the $$index_format variable.

# boolean forward_quote no
#
# When _set_, forwarded messages included in the main body of the
# message (when $$mime_forward is _unset_) will be quoted using
# $$indent_string.

# boolean forward_references no
#
# When _set_, forwarded messages set the "In-Reply-To:" and
# "References:" headers in the same way as normal replies would. Hence the
# forwarded message becomes part of the original thread instead of starting
# a new one.

# address from "Richard Russon <rich@flatcap.org>"
#
# When _set_, this variable contains a default "from" address.  It
# can be overridden using "$my_hdr" (including from a "$send-hook") and
# $$reverse_name.  This variable is ignored if $$use_from is _unset_.
# 
# If not specified, then it may be read from the environment variable `$$$EMAIL`.

# mbtable from_chars ""
#
# Controls the character used to prefix the %F and %L fields in the
# index.
# 
# | Character | Description |
# |-----------+---------------------------------------------------------------------------------------------|
# | 1         | Mail is written by you and has a To address, or has a known mailing list in the To address. |
# | 2         | Mail is written by you and has a Cc address, or has a known mailing list in the Cc address. |
# | 3         | Mail is written by you and has a Bcc address. |
# | 4         | All remaining cases. |
# 
# If this is empty or unset (default), the traditional long "To ",
# "Cc " and "Bcc " prefixes are used.  If set but too short to
# include a character for a particular case, a single space will be
# prepended to the field.  To prevent any prefix at all from being
# added in a particular case, use the special value CR (aka ^M)
# for the corresponding character.
# 
# This slightly odd interface is necessitated by NeoMutt's handling of
# string variables; one can't tell a variable that is unset from one
# that is set to the empty string.

# regex gecos_mask "^[^,]*"
#
# A regular expression used by NeoMutt to parse the GECOS field of a password
# entry when expanding the alias.  The default value
# will return the string up to the first "," encountered.
# If the GECOS field contains a string like "lastname, firstname" then you
# should set it to "`.*`".
# 
# This can be useful if you see the following behavior: you address an e-mail
# to user ID "stevef" whose full name is "Steve Franklin".  If NeoMutt expands
# "stevef" to '"Franklin" stevef@foo.bar' then you should set the $$gecos_mask to
# a regular expression that will match the whole name so NeoMutt will expand
# "Franklin" to "Franklin, Steve".

# string group_index_format "%4C %M%N %5s  %-45.45f %d"
#
# This variable allows you to customize the newsgroup browser display to
# your personal taste.  This string is similar to "$index_format", but
# has its own set of printf()-like sequences:
# 
# | .   | Description |
# |-----+--------------------------------------------------------------------|
# | %C  | Current newsgroup number |
# | %d  | Description of newsgroup (becomes from server) |
# | %f  | Newsgroup name |
# | %M  | - if newsgroup not allowed for direct post (moderated for example) |
# | %N  | N if newsgroup is new, u if unsubscribed, blank otherwise |
# | %n  | Number of new articles in newsgroup |
# | %s  | Number of unread articles in newsgroup |
# | %>X | Right justify the rest of the string and pad with character "X" |
# | %|X | Pad to the end of the line with character "X" |

# boolean hdrs yes
#
# When _unset_, the header fields normally added by the "$my_hdr"
# command are not created.  This variable _must_ be unset before
# composing a new message or replying in order to take effect.  If _set_,
# the user defined header fields are added to every new message.

# boolean header no
#
# When _set_, this variable causes NeoMutt to include the header
# of the message you are replying to into the edit buffer.
# The $$weed setting applies.

# string header_cache ""
#
# This variable points to the header cache database. If the path points to
# an existing directory, NeoMutt will create a dedicated header cache
# database per folder. Otherwise, the path points to a regular file, which
# will be created as needed and used as a shared global header cache for
# all folders.
# By default it is _unset_ so no header caching will be used.
# 
# Header caching can greatly improve speed when opening POP, IMAP
# MH or Maildir folders, see "$caching" for details.

# string header_cache_backend ""
#
# This variable specifies the header cache backend.

# boolean header_cache_compress yes
#
# When NeoMutt is compiled with qdbm, tokyocabinet or kyotocabinet
# as header cache backend, this option determines whether the
# database will be compressed. Compression results in database
# files roughly being one fifth of the usual diskspace, but the
# decompression can result in a slower opening of cached folder(s)
# which in general is still much faster than opening non header
# cached folders.

# long header_cache_pagesize 16384
#
# When NeoMutt is compiled with either gdbm or bdb4 as the header cache backend,
# this option changes the database page size.  Too large or too small
# values can waste space, memory, or CPU time. The default should be more
# or less optimal for most use cases.

# boolean header_color_partial no
#
# When _set_, color header regexes behave like color body regexes:
# color is applied to the exact text matched by the regex.  When
# _unset_, color is applied to the entire header.
# 
# One use of this option might be to apply color to just the header labels.
# 
# See "$color" for more details.

# boolean help no
#
# When _set_, help lines describing the bindings for the major functions
# provided by each menu are displayed on the first line of the screen.
# 
# **Note:** The binding will not be displayed correctly if the
# function is bound to a sequence rather than a single keystroke.  Also,
# the help line may not be updated if a binding is changed while NeoMutt is
# running.  Since this variable is primarily aimed at new users, neither
# of these should present a major problem.

# boolean hidden_host no
#
# When _set_, NeoMutt will skip the host name part of $$hostname variable
# when adding the domain part to addresses.  This variable does not
# affect the generation of Message-IDs, and it will not lead to the
# cut-off of first-level domains.

# slist hidden_tags "unread,draft,flagged,passed,replied,attachment,signed,encrypted"
#
# This variable specifies private notmuch/imap tags which should not be printed
# on screen.

# boolean hide_limited no
#
# When _set_, NeoMutt will not show the presence of messages that are hidden
# by limiting, in the thread tree.

# boolean hide_missing yes
#
# When _set_, NeoMutt will not show the presence of missing messages in the
# thread tree.

# boolean hide_thread_subject yes
#
# When _set_, NeoMutt will not show the subject of messages in the thread
# tree that have the same subject as their parent or closest previously
# displayed sibling.

# boolean hide_top_limited no
#
# When _set_, NeoMutt will not show the presence of messages that are hidden
# by limiting, at the top of threads in the thread tree.  Note that when
# $$hide_limited is _set_, this option will have no effect.

# boolean hide_top_missing yes
#
# When _set_, NeoMutt will not show the presence of missing messages at the
# top of threads in the thread tree.  Note that when $$hide_missing is
# _set_, this option will have no effect.

# number history 100
#
# This variable controls the size (in number of strings remembered) of
# the string history buffer per category. The buffer is cleared each time the
# variable is set.

# string history_file "~/.mutthistory"
#
# The file in which NeoMutt will save its history.
# 
# Also see $$save_history.

# boolean history_remove_dups no
#
# When _set_, all of the string history will be scanned for duplicates
# when a new entry is added.  Duplicate entries in the $$history_file will
# also be removed when it is periodically compacted.

# boolean honor_disposition no
#
# When _set_, NeoMutt will not display attachments with a
# disposition of "attachment" inline even if it could
# render the part to plain text. These MIME parts can only
# be viewed from the attachment menu.
# 
# If _unset_, NeoMutt will render all MIME parts it can
# properly transform to plain text.

# quad honor_followup_to yes
#
# This variable controls whether or not a Mail-Followup-To header is
# honored when group-replying to a message.

# string hostname "laptop.flatcap.org"
#
# Specifies the fully-qualified hostname of the system NeoMutt is running on
# containing the host's name and the DNS domain it belongs to. It is used
# as the domain part (after "@") for local email addresses as well as
# Message-Id headers.
# 
# If not specified in a config file, then NeoMutt will try to determine the hostname itself.
# 
# Optionally, NeoMutt can be compiled with a fixed domain name.
# 
# Also see $$use_domain and $$hidden_host.

# boolean idn_decode yes
#
# When _set_, NeoMutt will show you international domain names decoded.
# Note: You can use IDNs for addresses even if this is _unset_.
# This variable only affects decoding. (IDN only)

# boolean idn_encode yes
#
# When _set_, NeoMutt will encode international domain names using
# IDN.  Unset this if your SMTP server can handle newer (RFC6531)
# UTF-8 encoded domains. (IDN only)

# boolean ignore_list_reply_to no
#
# Affects the behavior of the `<reply>` function when replying to
# messages from mailing lists (as defined by the "$subscribe" or
# "$lists" commands).  When _set_, if the "Reply-To:" field is
# set to the same value as the "To:" field, NeoMutt assumes that the
# "Reply-To:" field was set by the mailing list to automate responses
# to the list, and will ignore this field.  To direct a response to the
# mailing list when this option is _set_, use the `$<list-reply>`
# function; `<group-reply>` will reply to both the sender and the
# list.

# slist imap_authenticators ""
#
# This is a colon-delimited list of authentication methods NeoMutt may
# attempt to use to log in to an IMAP server, in the order NeoMutt should
# try them.  Authentication methods are either "login" or the right
# side of an IMAP "AUTH=xxx" capability string, e.g. "digest-md5", "gssapi"
# or "cram-md5". This option is case-insensitive. If it's
# _unset_ (the default) NeoMutt will try all available methods,
# in order from most-secure to least-secure.
# 
# Example:
# ```
# set imap_authenticators="gssapi:cram-md5:login"
# ```
# 
# **Note:** NeoMutt will only fall back to other authentication methods if
# the previous methods are unavailable. If a method is available but
# authentication fails, NeoMutt will not connect to the IMAP server.

# boolean imap_check_subscribed yes
#
# When _set_, NeoMutt will fetch the set of subscribed folders from
# your server whenever a mailbox is **selected**, and add them to the set
# of mailboxes it polls for new mail just as if you had issued individual
# "$mailboxes" commands.

# boolean imap_condstore no
#
# When _set_, NeoMutt will use the CONDSTORE extension (RFC 7162)
# if advertised by the server.  NeoMutt's current implementation is basic,
# used only for initial message fetching and flag updates.
# 
# For some IMAP servers, enabling this will slightly speed up
# downloading initial messages.  Unfortunately, Gmail is not one
# those, and displays worse performance when enabled.  Your
# mileage may vary.

# string imap_delim_chars "/."
#
# This contains the list of characters which you would like to treat
# as folder separators for displaying IMAP paths. In particular it
# helps in using the "=" shortcut for your _folder_ variable.

# long imap_fetch_chunk_size 0
#
# When set to a value greater than 0, new headers will be downloaded
# in sets of this size.  If you have a very large mailbox, this might
# prevent a timeout and disconnect when opening the mailbox, by sending
# a FETCH per set of this size instead of a single FETCH for all new
# headers.

# string imap_headers ""
#
# NeoMutt requests these header fields in addition to the default headers
# ("Date:", "From:", "Sender:", "Subject:", "To:", "Cc:", "Message-Id:",
# "References:", "Content-Type:", "Content-Description:", "In-Reply-To:",
# "Reply-To:", "Lines:", "List-Post:", "X-Label:") from IMAP
# servers before displaying the index menu. You may want to add more
# headers for spam detection.
# 
# **Note:** This is a space separated list, items should be uppercase
# and not contain the colon, e.g. "X-BOGOSITY X-SPAM-STATUS" for the
# "X-Bogosity:" and "X-Spam-Status:" header fields.

# boolean imap_idle no
#
# When _set_, NeoMutt will attempt to use the IMAP IDLE extension
# to check for new mail in the current mailbox. Some servers
# (dovecot was the inspiration for this option) react badly
# to NeoMutt's implementation. If your connection seems to freeze
# up periodically, try unsetting this.

# number imap_keepalive 300
#
# This variable specifies the maximum amount of time in seconds that NeoMutt
# will wait before polling open IMAP connections, to prevent the server
# from closing them before NeoMutt has finished with them. The default is
# well within the RFC-specified minimum amount of time (30 minutes) before
# a server is allowed to do this, but in practice the RFC does get
# violated every now and then. Reduce this number if you find yourself
# getting disconnected from your IMAP server due to inactivity.

# boolean imap_list_subscribed no
#
# This variable configures whether IMAP folder browsing will look for
# only subscribed folders or all folders.  This can be toggled in the
# IMAP browser with the `<toggle-subscribed>` function.

# string imap_login ""
#
# Your login name on the IMAP server.
# 
# This variable defaults to the value of $$imap_user.

# string imap_oauth_refresh_command ""
#
# The command to run to generate an OAUTH refresh token for
# authorizing your connection to your IMAP server.  This command will be
# run on every connection attempt that uses the OAUTHBEARER authentication
# mechanism.  See "$oauth" for details.

# string imap_pass "piuJohPhaopiu6ye"
#
# Specifies the password for your IMAP account.  If _unset_, NeoMutt will
# prompt you for your password when you invoke the `<imap-fetch-mail>` function
# or try to open an IMAP folder.
# 
# **Warning**: you should only use this option when you are on a
# fairly secure machine, because the superuser can read your neomuttrc even
# if you are the only one who can read the file.

# boolean imap_passive yes
#
# When _set_, NeoMutt will not open new IMAP connections to check for new
# mail.  NeoMutt will only check for new mail over existing IMAP
# connections.  This is useful if you don't want to be prompted for
# user/password pairs on NeoMutt invocation, or if opening the connection
# is slow.

# boolean imap_peek yes
#
# When _set_, NeoMutt will avoid implicitly marking your mail as read whenever
# you fetch a message from the server. This is generally a good thing,
# but can make closing an IMAP folder somewhat slower. This option
# exists to appease speed freaks.

# number imap_pipeline_depth 15
#
# Controls the number of IMAP commands that may be queued up before they
# are sent to the server. A deeper pipeline reduces the amount of time
# NeoMutt must wait for the server, and can make IMAP servers feel much
# more responsive. But not all servers correctly handle pipelined commands,
# so if you have problems you might want to try setting this variable to 0.
# 
# **Note:** Changes to this variable have no effect on open connections.

# number imap_poll_timeout 15
#
# This variable specifies the maximum amount of time in seconds
# that NeoMutt will wait for a response when polling IMAP connections
# for new mail, before timing out and closing the connection.  Set
# to 0 to disable timing out.

# boolean imap_qresync no
#
# When _set_, NeoMutt will use the QRESYNC extension (RFC 7162)
# if advertised by the server.  NeoMutt's current implementation is basic,
# used only for initial message fetching and flag updates.
# 
# Note: this feature is currently experimental.  If you experience
# strange behavior, such as duplicate or missing messages please
# file a bug report to let us know.

# boolean imap_rfc5161 yes
#
# When _set_, NeoMutt will use the IMAP ENABLE extension (RFC 5161) to
# select CAPABILITIES. Some servers (notably Coremail System IMap Server) do
# not properly respond to ENABLE commands, which might cause NeoMutt to hang.
# If your connection seems to freeze at login, try unsetting this. See also
# https://github.com/neomutt/neomutt/issues/1689

# boolean imap_servernoise yes
#
# When _set_, NeoMutt will display warning messages from the IMAP
# server as error messages. Since these messages are often
# harmless, or generated due to configuration problems on the
# server which are out of the users' hands, you may wish to suppress
# them at some point.

# string imap_user "dev-mail"
#
# The name of the user whose mail you intend to access on the IMAP
# server.
# 
# This variable defaults to your user name on the local machine.

# boolean implicit_autoview no
#
# If set to "yes", NeoMutt will look for a mailcap entry with the
# "`copiousoutput`" flag set for _every_ MIME attachment it doesn't have
# an internal viewer defined for.  If such an entry is found, NeoMutt will
# use the viewer defined in that entry to convert the body part to text
# form.

# quad include yes
#
# Controls whether or not a copy of the message(s) you are replying to
# is included in your reply.

# boolean include_encrypted no
#
# Controls whether or not NeoMutt includes separately encrypted attachment
# contents when replying.
# 
# This variable was added to prevent accidental exposure of encrypted
# contents when replying to an attacker.  If a previously encrypted message
# were attached by the attacker, they could trick an unwary recipient into
# decrypting and including the message in their reply.

# boolean include_onlyfirst no
#
# Controls whether or not NeoMutt includes only the first attachment
# of the message you are replying.

# string indent_string "> "
#
# Specifies the string to prepend to each line of text quoted in a
# message to which you are replying.  You are strongly encouraged not to
# change this value, as it tends to agitate the more fanatical netizens.
# 
# The value of this option is ignored if $$text_flowed is set, because
# the quoting mechanism is strictly defined for format=flowed.
# 
# This option is a format string, please see the description of
# $$index_format for supported `printf(3)`-style sequences.

# string index_format "%<[12m?%<[7d?%<[12H?%[%H:%M ]&%[%a-%d]>&%[%d-%b]>&%[%b-%y]> %Z %-25.25F %<M?+%M) & >%s %* %<M?&(%c)>"
#
# This variable allows you to customize the message index display to
# your personal taste.
# 
# "Format strings" are similar to the strings used in the C
# function `printf(3)` to format output (see the man page for more details).
# For an explanation of the %? construct, see the $status_format description.
# The following sequences are defined in NeoMutt:
# 
# | .       | Description |
# |---------+-------------|
# | %a      | Address of the author |
# | %A      | Reply-to address (if present; otherwise: address of author) |
# | %b      | Filename of the original message folder (think mailbox) |
# | %B      | The list to which the letter was sent, or else the folder name (%b). |
# | %C      | Current message number |
# | %c      | Number of characters (bytes) in the body of the message (see $formatstrings-size) |
# | %cr     | Number of characters (bytes) in the raw message, including the header (see $formatstrings-size) |
# | %D      | Date and time of message using $date_format and local timezone |
# | %d      | Date and time of message using $date_format and sender's timezone |
# | %e      | Current message number in thread |
# | %E      | Number of messages in current thread |
# | %F      | Author name, or recipient name if the message is from you |
# | %Fp     | Like %F, but plain. No contextual formatting is applied to recipient name |
# | %f      | Sender (address + real name), either From: or Return-Path: |
# | %g      | Newsgroup name (if compiled with NNTP support) |
# | %g      | Message tags (e.g. notmuch tags/imap flags) |
# | %Gx     | Individual message tag (e.g. notmuch tags/imap flags) |
# | %H      | Spam attribute(s) of this message |
# | %I      | Initials of author |
# | %i      | Message-id of the current message |
# | %J      | Message tags (if present, tree unfolded, and != parent's tags) |
# | %K      | The list to which the letter was sent (if any; otherwise: empty) |
# | %L      | If an address in the "To:" or "Cc:" header field matches an address Defined by the users "$subscribe" command, this displays "To <list-name>", otherwise the same as %F |
# | %l      | number of lines in the unprocessed message (may not work with maildir, mh, and IMAP folders) |
# | %M      | Number of hidden messages if the thread is collapsed |
# | %m      | Total number of message in the mailbox |
# | %N      | Message score |
# | %n      | Author's real name (or address if missing) |
# | %O      | Original save folder where NeoMutt would formerly have Stashed the message: list name or recipient name If not sent to a list |
# | %P      | Progress indicator for the built-in pager (how much of the file has been displayed) |
# | %q      | Newsgroup name (if compiled with NNTP support) |
# | %R      | Comma separated list of "Cc:" recipients |
# | %r      | Comma separated list of "To:" recipients |
# | %S      | Single character status of the message ("N"/"O"/"D"/"d"/"!"/"r"/"*") |
# | %s      | Subject of the message |
# | %T      | The appropriate character from the $$to_chars string |
# | %t      | "To:" field (recipients) |
# | %u      | User (login) name of the author |
# | %v      | First name of the author, or the recipient if the message is from you |
# | %W      | Name of organization of author ("Organization:" field) |
# | %x      | "X-Comment-To:" field (if present and compiled with NNTP support) |
# | %X      | Number of MIME attachments (please see the "$attachments" section for possible speed effects) |
# | %Y      | "X-Label:" field, if present, and _(1)_ not at part of a thread tree, _(2)_ at the top of a thread, or _(3)_ "X-Label:" is different from Preceding message's "X-Label:" |
# | %y      | "X-Label:" field, if present |
# | %Z      | A three character set of message status flags.  The first character is new/read/replied flags ("n"/"o"/"r"/"O"/"N").  The second is deleted or encryption flags ("D"/"d"/"S"/"P"/"s"/"K").  The third is either tagged/flagged ("*"/"!"), or one of the characters Listed in $$to_chars. |
# | %zc     | Message crypto flags |
# | %zs     | Message status flags |
# | %zt     | Message tag flags |
# | %@name@ | insert and evaluate format-string from the matching ``$index-format-hook'' command
# | %{fmt}  | the date and time of the message is converted to sender's 0, NULL, time zone, and "fmt" is expanded by the library function `strftime(3)`; a leading bang disables locales |
# | %[fmt]  | the date and time of the message is converted to the local time zone, and "fmt" is expanded by the library function `strftime(3)`; a leading bang disables locales |
# | %(fmt)  | the local date and time when the message was received. "fmt" is expanded by the library function `strftime(3)`; a leading bang disables locales |
# | %>X     | right justify the rest of the string and pad with character "X" |
# | %|X     | pad to the end of the line with character "X" |
# | %*X     | soft-fill with character "X" as pad |
# 
# Date format expressions can be constructed based on relative dates. Using
# the date formatting operators along with nested conditionals, the date
# format can be modified based on how old a message is.  See the section on
# "Conditional Dates" for an explanation and examples
# 
# Note that for mbox/mmdf, ``%l'' applies to the unprocessed message, and
# for maildir/mh, the value comes from the ``Lines:'' header field when
# present (the meaning is normally the same). Thus the value depends on
# the encodings used in the different parts of the message and has little
# meaning in practice.
# 
# "Soft-fill" deserves some explanation: Normal right-justification
# will print everything to the left of the "%>", displaying padding and
# whatever lies to the right only if there's room. By contrast,
# soft-fill gives priority to the right-hand side, guaranteeing space
# to display it and showing padding only if there's still room. If
# necessary, soft-fill will eat text leftwards to make room for
# rightward text.
# 
# Note that these expandos are supported in
# ``$save-hook'', ``$fcc-hook'' and ``$fcc-save-hook'', too.

# string inews ""
#
# If set, specifies the program and arguments used to deliver news posted
# by NeoMutt.  Otherwise, NeoMutt posts article using current connection to
# news server.  The following printf-style sequence is understood:
# 
# | .  | Description |
# |----+-------------------|
# | %a | account url |
# | %p | port |
# | %P | port if specified |
# | %s | news server name |
# | %S | url schema |
# | %u | username |
# 
# Example:
# ```
# set inews="/usr/local/bin/inews -hS"
# ```

# string ispell "ispell"
#
# How to invoke ispell (GNU's spell-checking software).

# boolean keep_flagged no
#
# If _set_, read messages marked as flagged will not be moved
# from your spool mailbox to your $$mbox mailbox, or as a result of
# a "$mbox-hook" command.

# number mail_check 10
#
# This variable configures how often (in seconds) NeoMutt should look for
# new mail. Also see the $$timeout variable.

# boolean mail_check_recent yes
#
# When _set_, NeoMutt will only notify you about new mail that has been received
# since the last time you opened the mailbox.  When _unset_, NeoMutt will notify you
# if any new mail exists in the mailbox, regardless of whether you have visited it
# recently.
# 
# When _$$mark_old_ is set, NeoMutt does not consider the mailbox to contain new
# mail if only old messages exist.

# boolean mail_check_stats yes
#
# When _set_, NeoMutt will periodically calculate message
# statistics of a mailbox while polling for new mail.  It will
# check for unread, flagged, and total message counts.  Because
# this operation is more performance intensive, it defaults to
# _unset_, and has a separate option, $$mail_check_stats_interval, to
# control how often to update these counts.
# 
# Message statistics can also be explicitly calculated by invoking the
# `<check-stats>` function.

# number mail_check_stats_interval 10
#
# When $$mail_check_stats is _set_, this variable configures
# how often (in seconds) NeoMutt will update message counts.

# slist mailcap_path "~/.mutt/mailcap-dev"
#
# This variable specifies which files to consult when attempting to
# display MIME bodies not directly supported by NeoMutt.  The default value
# is generated during startup: see the ``$mailcap'' section of the manual.
# 
# $$mailcap_path is overridden by the environment variable `$$$MAILCAPS`.
# 
# The default search path is from RFC1524.

# boolean mailcap_sanitize yes
#
# If _set_, NeoMutt will restrict possible characters in mailcap % expandos
# to a well-defined set of safe characters.  This is the safe setting,
# but we are not sure it doesn't break some more advanced MIME stuff.
# 
# **DON'T CHANGE THIS SETTING UNLESS YOU ARE REALLY SURE WHAT YOU ARE
# DOING!**

# boolean maildir_check_cur no
#
# If _set_, NeoMutt will poll both the new and cur directories of
# a maildir folder for new messages.  This might be useful if other
# programs interacting with the folder (e.g. dovecot) are moving new
# messages to the cur directory.  Note that setting this option may
# slow down polling for new messages in large folders, since NeoMutt has
# to scan all cur messages.

# boolean maildir_header_cache_verify yes
#
# Check for Maildir unaware programs other than NeoMutt having modified maildir
# files when the header cache is in use.  This incurs one `stat(2)` per
# message every time the folder is opened (which can be very slow for NFS
# folders).

# boolean maildir_trash no
#
# If _set_, messages marked as deleted will be saved with the maildir
# trashed flag instead of unlinked.  **Note:** this only applies
# to maildir-style mailboxes.  Setting it will have no effect on other
# mailbox types.

# string mark_macro_prefix "'"
#
# Prefix for macros created using mark-message.  A new macro
# automatically generated with `<mark-message>a` will be composed
# from this prefix and the letter _a_.

# boolean mark_old no
#
# Controls whether or not NeoMutt marks _new_ **unread**
# messages as _old_ if you exit a mailbox without reading them.
# With this option _set_, the next time you start NeoMutt, the messages
# will show up with an "O" next to them in the index menu,
# indicating that they are old.

# boolean markers no
#
# Controls the display of wrapped lines in the internal pager. If set, a
# "+" marker is displayed at the beginning of wrapped lines.
# 
# Also see the $$smart_wrap variable.

# regex mask "!^\\.[^.]"
#
# A regular expression used in the file browser, optionally preceded by
# the _not_ operator "!".  Only files whose names match this mask
# will be shown. The match is always case-sensitive.

# string mbox "~/mbox"
#
# This specifies the folder into which read mail in your $$spoolfile
# folder will be appended.
# 
# Also see the $$move variable.

# enum mbox_type "mbox"
#
# The default mailbox type used when creating new folders. May be any of
# "mbox", "MMDF", "MH" or "Maildir".
# 
# This can also be set using the `-m` command-line option.

# number menu_context 0
#
# This variable controls the number of lines of context that are given
# when scrolling through menus. (Similar to $$pager_context.)

# boolean menu_move_off yes
#
# When _unset_, the bottom entry of menus will never scroll up past
# the bottom of the screen, unless there are less entries than lines.
# When _set_, the bottom entry may move off the bottom.

# boolean menu_scroll no
#
# When _set_, menus will be scrolled up or down one line when you
# attempt to move across a screen boundary.  If _unset_, the screen
# is cleared and the next or previous page of the menu is displayed
# (useful for slow links to avoid many redraws).

# boolean message_cache_clean no
#
# If _set_, NeoMutt will clean out obsolete entries from the message cache when
# the mailbox is synchronized. You probably only want to set it
# every once in a while, since it can be a little slow
# (especially for large folders).

# string message_cachedir ""
#
# Set this to a directory and NeoMutt will cache copies of messages from
# your IMAP and POP servers here. You are free to remove entries at any
# time.
# 
# When setting this variable to a directory, NeoMutt needs to fetch every
# remote message only once and can perform regular expression searches
# as fast as for local folders.
# 
# Also see the $$message_cache_clean variable.

# string message_format "%s"
#
# This is the string displayed in the "attachment" menu for
# attachments of type `message/rfc822`.  For a full listing of defined
# `printf(3)`-like sequences see the section on $$index_format.

# boolean meta_key no
#
# If _set_, forces NeoMutt to interpret keystrokes with the high bit (bit 8)
# set as if the user had pressed the Esc key and whatever key remains
# after having the high bit removed.  For example, if the key pressed
# has an ASCII value of `0xf8`, then this is treated as if the user had
# pressed Esc then "x".  This is because the result of removing the
# high bit from `0xf8` is `0x78`, which is the ASCII character
# "x".

# boolean metoo no
#
# If _unset_, NeoMutt will remove your address (see the "$alternates"
# command) from the list of recipients when replying to a message.

# boolean mh_purge no
#
# When _unset_, NeoMutt will mimic mh's behavior and rename deleted messages
# to `,<old file name>` in mh folders instead of really deleting
# them. This leaves the message on disk but makes programs reading the folder
# ignore it. If the variable is _set_, the message files will simply be
# deleted.
# 
# This option is similar to $$maildir_trash for Maildir folders.

# string mh_seq_flagged "flagged"
#
# The name of the MH sequence used for flagged messages.

# string mh_seq_replied "replied"
#
# The name of the MH sequence used to tag replied messages.

# string mh_seq_unseen "unseen"
#
# The name of the MH sequence used for unseen messages.

# quad mime_forward no
#
# When _set_, the message you are forwarding will be attached as a
# separate `message/rfc822` MIME part instead of included in the main body of the
# message.  This is useful for forwarding MIME messages so the receiver
# can properly view the message as it was delivered to you. If you like
# to switch between MIME and not MIME from mail to mail, set this
# variable to "ask-no" or "ask-yes".
# 
# Also see $$forward_decode and $$mime_forward_decode.

# boolean mime_forward_decode no
#
# Controls the decoding of complex MIME messages into `text/plain` when
# forwarding a message while $$mime_forward is _set_. Otherwise
# $$forward_decode is used instead.

# quad mime_forward_rest yes
#
# When forwarding multiple attachments of a MIME message from the attachment
# menu, attachments which can't be decoded in a reasonable manner will
# be attached to the newly composed message if this option is _set_.

# boolean mime_subject yes
#
# If _unset_, 8-bit "subject:" line in article header will not be
# encoded according to RFC2047 to base64.  This is useful when message
# is Usenet article, because MIME for news is nonstandard feature.

# string mime_type_query_command ""
#
# This specifies a command to run, to determine the mime type of a
# new attachment when composing a message.  Unless
# $$mime_type_query_first is set, this will only be run if the
# attachment's extension is not found in the mime.types file.
# 
# The string may contain a "%s", which will be substituted with the
# attachment filename.  NeoMutt will add quotes around the string substituted
# for "%s" automatically according to shell quoting rules, so you should
# avoid adding your own.  If no "%s" is found in the string, NeoMutt will
# append the attachment filename to the end of the string.
# 
# The command should output a single line containing the
# attachment's mime type.
# 
# Suggested values are "xdg-mime query filetype" or
# "file -bi".

# boolean mime_type_query_first no
#
# When _set_, the $$mime_type_query_command will be run before the
# mime.types lookup.

# string mix_entry_format "%4n %c %-16s %a"
#
# This variable describes the format of a remailer line on the mixmaster
# chain selection screen.  The following `printf(3)`-like sequences are
# supported:
# 
# | .  | Description |
# |----+--------------------------------|
# | %a | The remailer's e-mail address |
# | %c | Remailer capabilities |
# | %n | The running number on the menu |
# | %s | The remailer's short name |

# string mixmaster "mixmaster"
#
# This variable contains the path to the Mixmaster binary on your
# system.  It is used with various sets of parameters to gather the
# list of known remailers, and to finally send a message through the
# mixmaster chain.

# quad move no
#
# Controls whether or not NeoMutt will move read messages
# from your spool mailbox to your $$mbox mailbox, or as a result of
# a "$mbox-hook" command.

# boolean narrow_tree no
#
# This variable, when _set_, makes the thread tree narrower, allowing
# deeper threads to fit on the screen.

# number net_inc 10
#
# Operations that expect to transfer a large amount of data over the
# network will update their progress every $$net_inc kilobytes.
# If set to 0, no progress messages will be displayed.
# 
# See also $$read_inc, $$write_inc and $$net_inc.

# string new_mail_command ""
#
# If _set_, NeoMutt will call this command after a new message is received.
# See the $$status_format documentation for the values that can be formatted
# into this command.

# string news_cache_dir "~/.neomutt"
#
# This variable pointing to directory where NeoMutt will save cached news
# articles and headers in. If _unset_, articles and headers will not be
# saved at all and will be reloaded from the server each time.

# string news_server ""
#
# This variable specifies domain name or address of NNTP server.
# 
# You can also specify username and an alternative port for each news server,
# e.g. `[[s]news://][username[:password]@]server[:port]`
# 
# This option can also be set using the command line option "-g", the
# environment variable `$$$NNTPSERVER`, or putting the server name in the
# file "/etc/nntpserver".

# string newsgroups_charset "utf-8"
#
# Character set of newsgroups descriptions.

# string newsrc "~/.newsrc"
#
# The file, containing info about subscribed newsgroups - names and
# indexes of read articles.  The following printf-style sequence
# is understood:
# 
# | Expando | Description       | Example |
# |---------+-------------------+-----------------------|
# | %a      | Account url       | `news:news.gmane.org` |
# | %p      | Port              | `119` |
# | %P      | Port if specified | `10119` |
# | %s      | News server name  | `news.gmane.org` |
# | %S      | Url schema        | `news` |
# | %u      | Username          | `username` |

# number nm_db_limit 0
#
# This variable specifies the default limit used in notmuch queries.

# string nm_default_uri ""
#
# This variable specifies the default Notmuch database in format
# notmuch://<absolute path>.

# string nm_exclude_tags ""
#
# The messages tagged with these tags are excluded and not loaded
# from notmuch DB to NeoMutt unless specified explicitly.

# string nm_flagged_tag "flagged"
#
# This variable specifies notmuch tag which is used for flagged messages. The
# variable is used to count flagged messages in DB and set the flagged flag when
# modifying tags. All other NeoMutt commands use standard (e.g. maildir) flags.

# number nm_open_timeout 5
#
# This variable specifies the timeout for database open in seconds.

# string nm_query_type "messages"
#
# This variable specifies the default query type (threads or messages) used in notmuch queries.

# number nm_query_window_current_position 0
#
# This variable contains the position of the current search for window based vfolder.

# string nm_query_window_current_search ""
#
# This variable contains the currently setup notmuch search for window based vfolder.

# number nm_query_window_duration 0
#
# This variable sets the time duration of a windowed notmuch query.
# Accepted values all non negative integers. A value of 0 disables the feature.

# string nm_query_window_timebase "week"
#
# This variable sets the time base of a windowed notmuch query.
# Accepted values are 'minute', 'hour', 'day', 'week', 'month', 'year'

# boolean nm_record no
#
# This variable specifies if the NeoMutt record should indexed by notmuch.

# string nm_record_tags ""
#
# This variable specifies the default tags applied to messages stored to the NeoMutt record.
# When set to 0 this variable disable the window feature.

# string nm_replied_tag "replied"
#
# This variable specifies notmuch tag which is used for replied messages. The
# variable is used to set the replied flag when modifiying tags. All other NeoMutt
# commands use standard (e.g. maildir) flags.

# string nm_unread_tag "unread"
#
# This variable specifies notmuch tag which is used for unread messages. The
# variable is used to count unread messages in DB and set the unread flag when
# modifiying tags. All other NeoMutt commands use standard (e.g. maildir) flags.

# string nntp_authenticators ""
#
# This is a colon-delimited list of authentication methods NeoMutt may
# attempt to use to log in to a news server, in the order NeoMutt should
# try them.  Authentication methods are either "user" or any
# SASL mechanism, e.g. "digest-md5", "gssapi" or "cram-md5".
# This option is case-insensitive.  If it's _unset_ (the default)
# NeoMutt will try all available methods, in order from most-secure to
# least-secure.
# 
# Example:
# ```
# set nntp_authenticators="digest-md5:user"
# ```
# 
# **Note:** NeoMutt will only fall back to other authentication methods if
# the previous methods are unavailable. If a method is available but
# authentication fails, NeoMutt will not connect to the IMAP server.

# number nntp_context 1000
#
# This variable defines number of articles which will be in index when
# newsgroup entered.  If active newsgroup have more articles than this
# number, oldest articles will be ignored.  Also controls how many
# articles headers will be saved in cache when you quit newsgroup.

# boolean nntp_listgroup yes
#
# This variable controls whether or not existence of each article is
# checked when newsgroup is entered.

# boolean nntp_load_description yes
#
# This variable controls whether or not descriptions for each newsgroup
# must be loaded when newsgroup is added to list (first time list
# loading or new newsgroup adding).

# string nntp_pass ""
#
# Your password for NNTP account.

# number nntp_poll 60
#
# The time in seconds until any operations on newsgroup except post new
# article will cause recheck for new news.  If set to 0, NeoMutt will
# recheck newsgroup on each operation in index (stepping, read article,
# etc.).

# string nntp_user ""
#
# Your login name on the NNTP server.  If _unset_ and NNTP server requires
# authentication, NeoMutt will prompt you for your account name when you
# connect to news server.

# string pager "builtin"
#
# This variable specifies which pager you would like to use to view
# messages. The value "builtin" means to use the built-in pager, otherwise this
# variable should specify the pathname of the external pager you would
# like to use.
# 
# Using an external pager may have some disadvantages: Additional
# keystrokes are necessary because you can't call NeoMutt functions
# directly from the pager, and screen resizes cause lines longer than
# the screen width to be badly formatted in the help menu.

# number pager_context 5
#
# This variable controls the number of lines of context that are given
# when displaying the next or previous page in the internal pager.  By
# default, NeoMutt will display the line after the last one on the screen
# at the top of the next page (0 lines of context).
# 
# This variable also specifies the amount of context given for search
# results. If positive, this many lines will be given before a match,
# if 0, the match will be top-aligned.

# string pager_format "-%Z- %C/%m: %-20.20n   %s%*  -- (%P)"
#
# This variable controls the format of the one-line message "status"
# displayed before each message in either the internal or an external
# pager.  The valid sequences are listed in the $$index_format
# section.

# number pager_index_lines 10
#
# Determines the number of lines of a mini-index which is shown when in
# the pager.  The current message, unless near the top or bottom of the
# folder, will be roughly one third of the way down this mini-index,
# giving the reader the context of a few messages before and after the
# message.  This is useful, for example, to determine how many messages
# remain to be read in the current thread.  One of the lines is reserved
# for the status bar from the index, so a setting of 6
# will only show 5 lines of the actual index.  A value of 0 results in
# no index being shown.  If the number of messages in the current folder
# is less than $$pager_index_lines, then the index will only use as
# many lines as it needs.

# boolean pager_stop no
#
# When _set_, the internal-pager will **not** move to the next message
# when you are at the end of a message and invoke the `<next-page>`
# function.

# boolean pgp_auto_decode no
#
# If _set_, NeoMutt will automatically attempt to decrypt traditional PGP
# messages whenever the user performs an operation which ordinarily would
# result in the contents of the message being operated on.  For example,
# if the user displays a pgp-traditional message which has not been manually
# checked with the `$<check-traditional-pgp>` function, NeoMutt will automatically
# check the message for traditional pgp.

# boolean pgp_autoinline no
#
# This option controls whether NeoMutt generates old-style inline
# (traditional) PGP encrypted or signed messages under certain
# circumstances.  This can be overridden by use of the pgp menu,
# when inline is not required.  The GPGME backend does not support
# this option.
# 
# Note that NeoMutt might automatically use PGP/MIME for messages
# which consist of more than a single MIME part.  NeoMutt can be
# configured to ask before sending PGP/MIME messages when inline
# (traditional) would not work.
# 
# Also see the $$pgp_mime_auto variable.
# 
# Also note that using the old-style PGP message format is **strongly**
# **deprecated**.
# (PGP only)

# boolean pgp_check_exit yes
#
# If _set_, NeoMutt will check the exit code of the PGP subprocess when
# signing or encrypting.  A non-zero exit code means that the
# subprocess failed.
# (PGP only)

# boolean pgp_check_gpg_decrypt_status_fd yes
#
# If _set_, NeoMutt will check the status file descriptor output
# of $$pgp_decrypt_command and $$pgp_decode_command for GnuPG status codes
# indicating successful decryption.  This will check for the presence of
# DECRYPTION_OKAY, absence of DECRYPTION_FAILED, and that all
# PLAINTEXT occurs between the BEGIN_DECRYPTION and END_DECRYPTION
# status codes.
# 
# If _unset_, NeoMutt will instead match the status fd output
# against $$pgp_decryption_okay.
# (PGP only)

# string pgp_clearsign_command ""
#
# This format is used to create an old-style "clearsigned" PGP
# message.  Note that the use of this format is **strongly**
# **deprecated**.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# Note that in this case, %r expands to the search string, which is a list of
# one or more quoted values such as email address, name, or keyid.
# (PGP only)

# string pgp_decode_command ""
#
# This format strings specifies a command which is used to decode
# application/pgp attachments.
# 
# The PGP command formats have their own set of `printf(3)`-like sequences:
# 
# | .  | Description |
# |----+--------------------------------------------------------------------------------------------------------------------------------|
# | %p | Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty string otherwise. Note: This may be used with a %? construct. |
# | %f | Expands to the name of a file containing a message. |
# | %s | Expands to the name of a file containing the signature part of a `multipart/signed` attachment when verifying it. |
# | %a | The value of $$pgp_sign_as if set, otherwise the value of $$pgp_default_key. |
# | %r | One or more key IDs (or fingerprints if available). |
# 
# For examples on how to configure these formats for the various versions
# of PGP which are floating around, see the pgp and gpg sample configuration files in
# the `samples/` subdirectory which has been installed on your system
# alongside the documentation.
# (PGP only)

# string pgp_decrypt_command ""
#
# This command is used to decrypt a PGP encrypted message.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)
# 
# Note: When decrypting messages using `gpg`, a pinentry program needs to
# be invoked unless the password is cached within `gpg-agent`.
# Currently, the `pinentry-tty` program (usually distributed with
# `gpg`) isn't suitable for being invoked by NeoMutt.  You are encouraged
# to use a different pinentry-program when running NeoMutt in order to avoid
# problems.
# 
# See also: https://github.com/neomutt/neomutt/issues/1014

# regex pgp_decryption_okay ""
#
# If you assign text to this variable, then an encrypted PGP
# message is only considered successfully decrypted if the output
# from $$pgp_decrypt_command contains the text.  This is used to
# protect against a spoofed encrypted message, with multipart/encrypted
# headers but containing a block that is not actually encrypted.
# (e.g. simply signed and ascii armored text).
# 
# Note that if $$pgp_check_gpg_decrypt_status_fd is set, this variable
# is ignored.
# (PGP only)

# string pgp_default_key ""
#
# This is the default key-pair to use for PGP operations.  It will be
# used for encryption (see $$postpone_encrypt and $$pgp_self_encrypt).
# 
# It will also be used for signing unless $$pgp_sign_as is set.
# 
# The (now deprecated) _pgp_self_encrypt_as_ is an alias for this
# variable, and should no longer be used.
# (PGP only)

# string pgp_encrypt_only_command ""
#
# This command is used to encrypt a body part without signing it.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# Note that in this case, %r expands to the search string, which is a list of
# one or more quoted values such as email address, name, or keyid.
# (PGP only)

# string pgp_encrypt_sign_command ""
#
# This command is used to both sign and encrypt a body part.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# string pgp_entry_format "%4n %t%f %4l/0x%k %-4a %2c %u"
#
# This variable allows you to customize the PGP key selection menu to
# your personal taste. This string is similar to $$index_format, but
# has its own set of `printf(3)`-like sequences:
# 
# | .      | Description |
# |--------+----------------------------------------------------------|
# | %a     | Algorithm |
# | %c     | Capabilities |
# | %f     | Flags |
# | %k     | Key id |
# | %l     | Key length |
# | %n     | Number |
# | %p     | Protocol |
# | %t     | Trust/validity of the key-uid association |
# | %u     | User id |
# | %[<s>] | Date of the key where <s> is an `strftime(3)` expression |
# 
# (PGP only)

# string pgp_export_command ""
#
# This command is used to export a public key from the user's
# key ring.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# string pgp_getkeys_command ""
#
# This command is invoked whenever NeoMutt needs to fetch the public key associated with
# an email address.  Of the sequences supported by $$pgp_decode_command, %r is
# the only `printf(3)`-like sequence used with this format.  Note that
# in this case, %r expands to the email address, not the public key ID (the key ID is
# unknown, which is why NeoMutt is invoking this command).
# (PGP only)

# regex pgp_good_sign ""
#
# If you assign a text to this variable, then a PGP signature is only
# considered verified if the output from $$pgp_verify_command contains
# the text. Use this variable if the exit code from the command is 0
# even for bad signatures.
# (PGP only)

# boolean pgp_ignore_subkeys yes
#
# Setting this variable will cause NeoMutt to ignore OpenPGP subkeys. Instead,
# the principal key will inherit the subkeys' capabilities.  _Unset_ this
# if you want to play interesting key selection games.
# (PGP only)

# string pgp_import_command ""
#
# This command is used to import a key from a message into
# the user's public key ring.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# string pgp_list_pubring_command ""
#
# This command is used to list the public key ring's contents.  The
# output format must be analogous to the one used by
# ```
# gpg --list-keys --with-colons --with-fingerprint
# ```
# 
# Note: gpg's `fixed-list-mode` option should not be used.  It
# produces a different date format which may result in NeoMutt showing
# incorrect key generation dates.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# string pgp_list_secring_command ""
#
# This command is used to list the secret key ring's contents.  The
# output format must be analogous to the one used by:
# ```
# gpg --list-keys --with-colons --with-fingerprint
# ```
# 
# Note: gpg's `fixed-list-mode` option should not be used.  It
# produces a different date format which may result in NeoMutt showing
# incorrect key generation dates.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# boolean pgp_long_ids yes
#
# If _set_, use 64 bit PGP key IDs, if _unset_ use the normal 32 bit key IDs.
# NOTE: Internally, NeoMutt has transitioned to using fingerprints (or long key IDs
# as a fallback).  This option now only controls the display of key IDs
# in the key selection menu and a few other places.
# (PGP only)

# quad pgp_mime_auto ask-yes
#
# This option controls whether NeoMutt will prompt you for
# automatically sending a (signed/encrypted) message using
# PGP/MIME when inline (traditional) fails (for any reason).
# 
# Also note that using the old-style PGP message format is **strongly**
# **deprecated**.
# (PGP only)

# boolean pgp_replyinline no
#
# Setting this variable will cause NeoMutt to always attempt to
# create an inline (traditional) message when replying to a
# message which is PGP encrypted/signed inline.  This can be
# overridden by use of the pgp menu, when inline is not
# required.  This option does not automatically detect if the
# (replied-to) message is inline; instead it relies on NeoMutt
# internals for previously checked/flagged messages.
# 
# Note that NeoMutt might automatically use PGP/MIME for messages
# which consist of more than a single MIME part.  NeoMutt can be
# configured to ask before sending PGP/MIME messages when inline
# (traditional) would not work.
# 
# Also see the $$pgp_mime_auto variable.
# 
# Also note that using the old-style PGP message format is **strongly**
# **deprecated**.
# (PGP only)

# boolean pgp_retainable_sigs no
#
# If _set_, signed and encrypted messages will consist of nested
# `multipart/signed` and `multipart/encrypted` body parts.
# 
# This is useful for applications like encrypted and signed mailing
# lists, where the outer layer (`multipart/encrypted`) can be easily
# removed, while the inner `multipart/signed` part is retained.
# (PGP only)

# boolean pgp_self_encrypt yes
#
# When _set_, PGP encrypted messages will also be encrypted
# using the key in $$pgp_default_key.
# (PGP only)

# boolean pgp_show_unusable yes
#
# If _set_, NeoMutt will display non-usable keys on the PGP key selection
# menu.  This includes keys which have been revoked, have expired, or
# have been marked as "disabled" by the user.
# (PGP only)

# string pgp_sign_as ""
#
# If you have a different key pair to use for signing, you should
# set this to the signing key.  Most people will only need to set
# $$pgp_default_key.  It is recommended that you use the keyid form
# to specify your key (e.g. `0x00112233`).
# (PGP only)

# string pgp_sign_command ""
#
# This command is used to create the detached PGP signature for a
# `multipart/signed` PGP/MIME body part.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# sort pgp_sort_keys "address"
#
# Specifies how the entries in the pgp menu are sorted. The
# following are legal values:
# 
# | .       | Description |
# |---------+--------------------------------|
# | address | sort alphabetically by user id |
# | keyid   | sort alphabetically by key id |
# | date    | sort by key creation date |
# | trust   | sort by the trust of the key |
# 
# If you prefer reverse order of the above values, prefix it with
# "reverse-".
# (PGP only)

# boolean pgp_strict_enc yes
#
# If _set_, NeoMutt will automatically encode PGP/MIME signed messages as
# quoted-printable.  Please note that unsetting this variable may
# lead to problems with non-verifyable PGP signatures, so only change
# this if you know what you are doing.
# (PGP only)

# long pgp_timeout 300
#
# The number of seconds after which a cached passphrase will expire if
# not used.
# (PGP only)

# boolean pgp_use_gpg_agent yes
#
# If _set_, NeoMutt expects a `gpg-agent(1)` process will handle
# private key passphrase prompts.  If _unset_, NeoMutt will prompt
# for the passphrase and pass it via stdin to the pgp command.
# 
# Note that as of version 2.1, GnuPG automatically spawns an agent
# and requires the agent be used for passphrase management.  Since
# that version is increasingly prevalent, this variable now
# defaults _set_.
# 
# NeoMutt works with a GUI or curses pinentry program.  A TTY pinentry
# should not be used.
# 
# If you are using an older version of GnuPG without an agent running,
# or another encryption program without an agent, you will need to
# _unset_ this variable.
# (PGP only)

# string pgp_verify_command ""
#
# This command is used to verify PGP signatures.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# string pgp_verify_key_command ""
#
# This command is used to verify key information from the key selection
# menu.
# 
# This is a format string, see the $$pgp_decode_command command for
# possible `printf(3)`-like sequences.
# (PGP only)

# boolean pipe_decode no
#
# Used in connection with the `<pipe-message>` command.  When _unset_,
# NeoMutt will pipe the messages without any preprocessing. When _set_, NeoMutt
# will weed headers and will attempt to decode the messages
# first.

# string pipe_sep "\n"
#
# The separator to add between messages when piping a list of tagged
# messages to an external Unix command.

# boolean pipe_split no
#
# Used in connection with the `<pipe-message>` function following
# `<tag-prefix>`.  If this variable is _unset_, when piping a list of
# tagged messages NeoMutt will concatenate the messages and will pipe them
# all concatenated.  When _set_, NeoMutt will pipe the messages one by one.
# In both cases the messages are piped in the current sorted order,
# and the $$pipe_sep separator is added after each message.

# boolean pop_auth_try_all yes
#
# If _set_, NeoMutt will try all available authentication methods.
# When _unset_, NeoMutt will only fall back to other authentication
# methods if the previous methods are unavailable. If a method is
# available but authentication fails, NeoMutt will not connect to the POP server.

# slist pop_authenticators ""
#
# This is a colon-delimited list of authentication methods NeoMutt may
# attempt to use to log in to an POP server, in the order NeoMutt should
# try them.  Authentication methods are either "user", "apop" or any
# SASL mechanism, e.g. "digest-md5", "gssapi" or "cram-md5".
# This option is case-insensitive. If this option is _unset_
# (the default) NeoMutt will try all available methods, in order from
# most-secure to least-secure.
# 
# Example:
# ```
# set pop_authenticators="digest-md5:apop:user"
# ```

# number pop_checkinterval 60
#
# This variable configures how often (in seconds) NeoMutt should look for
# new mail in the currently selected mailbox if it is a POP mailbox.

# quad pop_delete ask-no
#
# If _set_, NeoMutt will delete successfully downloaded messages from the POP
# server when using the `$<fetch-mail>` function.  When _unset_, NeoMutt will
# download messages but also leave them on the POP server.

# string pop_host ""
#
# The name of your POP server for the `$<fetch-mail>` function.  You
# can also specify an alternative port, username and password, i.e.:
# ```
# [pop[s]://][username[:password]@]popserver[:port]
# ```
# 
# where "[...]" denotes an optional part.

# boolean pop_last no
#
# If this variable is _set_, NeoMutt will try to use the "`LAST`" POP command
# for retrieving only unread messages from the POP server when using
# the `$<fetch-mail>` function.

# string pop_oauth_refresh_command ""
#
# The command to run to generate an OAUTH refresh token for
# authorizing your connection to your POP server.  This command will be
# run on every connection attempt that uses the OAUTHBEARER authentication
# mechanism.  See "$oauth" for details.

# string pop_pass "piuJohPhaopiu6ye"
#
# Specifies the password for your POP account.  If _unset_, NeoMutt will
# prompt you for your password when you open a POP mailbox.
# 
# **Warning**: you should only use this option when you are on a
# fairly secure machine, because the superuser can read your neomuttrc
# even if you are the only one who can read the file.

# quad pop_reconnect ask-yes
#
# Controls whether or not NeoMutt will try to reconnect to the POP server if
# the connection is lost.

# string pop_user "dev-mail"
#
# Your login name on the POP server.
# 
# This variable defaults to your user name on the local machine.

# string post_indent_string ""
#
# Similar to the $$attribution variable, NeoMutt will append this
# string after the inclusion of a message which is being replied to.

# quad post_moderated ask-yes
#
# If set to _yes_, NeoMutt will post article to newsgroup that have
# not permissions to posting (e.g. moderated).  **Note:** if news server
# does not support posting to that newsgroup or totally read-only, that
# posting will not have an effect.

# quad postpone no
#
# Controls whether or not messages are saved in the $$postponed
# mailbox when you elect not to send immediately. If set to
# _ask-yes_ or _ask-no_, you will be prompted with "Save
# (postpone) draft message?" when quitting from the "compose"
# screen.
# 
# Also see the $$recall variable.

# boolean postpone_encrypt no
#
# When _set_, postponed messages that are marked for encryption will be
# self-encrypted.  NeoMutt will first try to encrypt using the value specified
# in $$pgp_default_key or $$smime_default_key.  If those are not
# set, it will try the deprecated $$postpone_encrypt_as.
# (Crypto only)

# string postpone_encrypt_as ""
#
# This is a deprecated fall-back variable for $$postpone_encrypt.
# Please use $$pgp_default_key or $$smime_default_key.
# (Crypto only)

# string postponed "imaps://flatcap.org/drafts"
#
# NeoMutt allows you to indefinitely "$postpone sending a message" which
# you are editing.  When you choose to postpone a message, NeoMutt saves it
# in the mailbox specified by this variable.
# 
# Also see the $$postpone variable.

# string preconnect ""
#
# If _set_, a shell command to be executed if NeoMutt fails to establish
# a connection to the server. This is useful for setting up secure
# connections, e.g. with `ssh(1)`. If the command returns a  nonzero
# status, NeoMutt gives up opening the server. Example:
# ```
# set preconnect="ssh -f -q -L 1234:mailhost.net:143 mailhost.net \
sleep 20 < /dev/null > /dev/null"
# ```
# 
# Mailbox "foo" on "mailhost.net" can now be reached
# as "{localhost:1234}foo". 0, NULL,
# 
# Note: For this example to work, you must be able to log in to the
# remote machine without having to enter a password.

# slist preferred_languages ""
#
# RFC8255 : user preferred languages to be search in parts and display
# Ex. : set preferred_languages="en,fr,de"

# quad print ask-no
#
# Controls whether or not NeoMutt really prints messages.
# This is set to "ask-no" by default, because some people
# accidentally hit "p" often.

# string print_command "lpr"
#
# This specifies the command pipe that should be used to print messages.

# boolean print_decode yes
#
# Used in connection with the `<print-message>` command.  If this
# option is _set_, the message is decoded before it is passed to the
# external command specified by $$print_command.  If this option
# is _unset_, no processing will be applied to the message when
# printing it.  The latter setting may be useful if you are using
# some advanced printer filter which is able to properly format
# e-mail messages for printing.

# boolean print_split no
#
# Used in connection with the `<print-message>` command.  If this option
# is _set_, the command specified by $$print_command is executed once for
# each message which is to be printed.  If this option is _unset_,
# the command specified by $$print_command is executed only once, and
# all the messages are concatenated, with a form feed as the message
# separator.
# 
# Those who use the `enscript`(1) program's mail-printing mode will
# most likely want to _set_ this option.

# boolean prompt_after yes
#
# If you use an _external_ $$pager, setting this variable will
# cause NeoMutt to prompt you for a command when the pager exits rather
# than returning to the index menu.  If _unset_, NeoMutt will return to the
# index menu when the external pager exits.

# string query_command ""
#
# This specifies the command NeoMutt will use to make external address
# queries.  The string may contain a "%s", which will be substituted
# with the query string the user types.  NeoMutt will add quotes around the
# string substituted for "%s" automatically according to shell quoting
# rules, so you should avoid adding your own.  If no "%s" is found in
# the string, NeoMutt will append the user's query to the end of the string.
# See "$query" for more information.

# string query_format "%4c %t %-25.25a %-25.25n %?e?(%e)?"
#
# This variable describes the format of the "query" menu. The
# following `printf(3)`-style sequences are understood:
# 
# | .   | Description |
# |-----+-------------------------------------------------------|
# | %a  | Destination address |
# | %c  | Current entry number |
# | %e  | Extra information * |
# | %n  | Destination name |
# | %t  | "*" if current entry is tagged, a space otherwise |
# | %>X | Right justify the rest of the string and pad with "X" |
# | %|X | Pad to the end of the line with "X" |
# | %*X | Soft-fill with character "X" as pad |
# 
# For an explanation of "soft-fill", see the $$index_format documentation.
# 
# * = can be optionally printed if nonzero, see the $$status_format documentation.

# quad quit yes
#
# This variable controls whether "quit" and "exit" actually quit
# from NeoMutt.  If this option is _set_, they do quit, if it is _unset_, they
# have no effect, and if it is set to _ask-yes_ or _ask-no_, you are
# prompted for confirmation when you try to quit.

# regex quote_regex "^([ \t]*[|>:}#])+"
#
# A regular expression used in the internal pager to determine quoted
# sections of text in the body of a message. Quoted text may be filtered
# out using the `<toggle-quoted>` command, or colored according to the
# "color quoted" family of directives.
# 
# Higher levels of quoting may be colored differently ("color quoted1",
# "color quoted2", etc.). The quoting level is determined by removing
# the last character from the matched text and recursively reapplying
# the regular expression until it fails to produce a match.
# 
# Match detection may be overridden by the $$smileys regular expression.

# number read_inc 1
#
# If set to a value greater than 0, NeoMutt will display which message it
# is currently on when reading a mailbox or when performing search actions
# such as search and limit. The message is printed after
# this many messages have been read or searched (e.g., if set to 25, NeoMutt will
# print a message when it is at message 25, and then again when it gets
# to message 50).  This variable is meant to indicate progress when
# reading or searching large mailboxes which may take some time.
# When set to 0, only a single message will appear before the reading
# the mailbox.
# 
# Also see the $$write_inc, $$net_inc and $$time_inc variables and the
# "$tuning" section of the manual for performance considerations.

# boolean read_only no
#
# If _set_, all folders are opened in read-only mode.

# string realname ""
#
# This variable specifies what "real" or "personal" name should be used
# when sending messages.
# 
# If not specified, then the user's "real name" will be read from `/etc/passwd`.
# This option will not be used, if "$$from" is set.

# quad recall no
#
# Controls whether or not NeoMutt recalls postponed messages
# when composing a new message.
# 
# Setting this variable to _yes_ is not generally useful, and thus not
# recommended.  Note that the `<recall-message>` function can be used
# to manually recall postponed messages.
# 
# Also see $$postponed variable.

# string record "^"
#
# This specifies the file into which your outgoing messages should be
# appended.  (This is meant as the primary method for saving a copy of
# your messages, but another way to do this is using the "$my_hdr"
# command to create a "Bcc:" field with your email address in it.)
# 
# The value of _$$record_ is overridden by the $$force_name and
# $$save_name variables, and the "$fcc-hook" command.  Also see $$copy
# and $$write_bcc.

# boolean reflow_space_quotes yes
#
# This option controls how quotes from format=flowed messages are displayed
# in the pager and when replying (with $$text_flowed _unset_).
# When set, this option adds spaces after each level of quote marks, turning
# ">>>foo" into "> > > foo".
# 
# **Note:** If $$reflow_text is _unset_, this option has no effect.
# Also, this option does not affect replies when $$text_flowed is _set_.

# boolean reflow_text yes
#
# When _set_, NeoMutt will reformat paragraphs in text/plain
# parts marked format=flowed.  If _unset_, NeoMutt will display paragraphs
# unaltered from how they appear in the message body.  See RFC3676 for
# details on the _format=flowed_ format.
# 
# Also see $$reflow_wrap, and $$wrap.

# number reflow_wrap 78
#
# This variable controls the maximum paragraph width when reformatting text/plain
# parts when $$reflow_text is _set_.  When the value is 0, paragraphs will
# be wrapped at the terminal's right margin.  A positive value sets the
# paragraph width relative to the left margin.  A negative value set the
# paragraph width relative to the right margin.
# 
# Also see $$wrap.

# regex reply_regex "^((re|aw|sv)(\\[[0-9]+\\])*:[ \t]*)*"
#
# A regular expression used to recognize reply messages when threading
# and replying. The default value corresponds to the English "Re:", the
# German "Aw:" and the Swedish "Sv:".

# boolean reply_self no
#
# If _unset_ and you are replying to a message sent by you, NeoMutt will
# assume that you want to reply to the recipients of that message rather
# than to yourself.
# 
# Also see the "$alternates" command.

# quad reply_to ask-yes
#
# If _set_, when replying to a message, NeoMutt will use the address listed
# in the Reply-to: header as the recipient of the reply.  If _unset_,
# it will use the address in the From: header field instead.  This
# option is useful for reading a mailing list that sets the Reply-To:
# header field to the list address and you want to send a private
# message to the author of a message.

# boolean reply_with_xorig no
#
# This variable provides a toggle. When active, the From: header will be
# extracted from the current mail's 'X-Original-To:' header. This setting
# does not have precedence over "$reverse_realname".
# 
# Assuming 'fast_reply' is disabled, this option will prompt the user with a
# prefilled From: header.

# boolean resolve yes
#
# When _set_, the cursor will be automatically advanced to the next
# (possibly undeleted) message whenever a command that modifies the
# current message is executed.

# boolean resume_draft_files no
#
# If _set_, draft files (specified by `-H` on the command
# line) are processed similarly to when resuming a postponed
# message.  Recipients are not prompted for; send-hooks are not
# evaluated; no alias expansion takes place; user-defined headers
# and signatures are not added to the message.

# boolean resume_edited_draft_files yes
#
# If _set_, draft files previously edited (via `-E -H` on
# the command line) will have $$resume_draft_files automatically
# set when they are used as a draft file again.
# 
# The first time a draft file is saved, NeoMutt will add a header,
# X-Mutt-Resume-Draft to the saved file.  The next time the draft
# file is read in, if NeoMutt sees the header, it will set
# $$resume_draft_files.
# 
# This option is designed to prevent multiple signatures,
# user-defined headers, and other processing effects from being
# made multiple times to the draft file.

# boolean reverse_alias no
#
# This variable controls whether or not NeoMutt will display the "personal"
# name from your aliases in the index menu if it finds an alias that
# matches the message's sender.  For example, if you have the following
# alias:
# ```
# alias juser abd30425@somewhere.net (Joe User)
# ```
# 
# and then you receive mail which contains the following header:
# ```
# From: abd30425@somewhere.net
# ```
# 
# It would be displayed in the index menu as "Joe User" instead of
# "abd30425@somewhere.net."  This is useful when the person's e-mail
# address is not human friendly.

# boolean reverse_name yes
#
# It may sometimes arrive that you receive mail to a certain machine,
# move the messages to another machine, and reply to some the messages
# from there.  If this variable is _set_, the default _From:_ line of
# the reply messages is built using the address where you received the
# messages you are replying to **if** that address matches your
# "$alternates".  If the variable is _unset_, or the address that would be
# used doesn't match your "$alternates", the _From:_ line will use
# your address on the current machine.
# 
# Also see the "$alternates" command and $$reverse_realname.

# boolean reverse_realname yes
#
# This variable fine-tunes the behavior of the $$reverse_name feature.
# 
# When it is _unset_, NeoMutt will remove the real name part of a
# matching address.  This allows the use of the email address
# without having to also use what the sender put in the real name
# field.
# 
# When it is _set_, NeoMutt will use the matching address as-is.
# 
# In either case, a missing real name will be filled in afterwards
# using the value of $$realname.

# boolean rfc2047_parameters yes
#
# When this variable is _set_, NeoMutt will decode RFC2047-encoded MIME
# parameters. You want to set this variable when NeoMutt suggests you
# to save attachments to files named like:
# ```
# =?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=
# ```
# 
# When this variable is _set_ interactively, the change won't be
# active until you change folders.
# 
# Note that this use of RFC2047's encoding is explicitly
# prohibited by the standard, but nevertheless encountered in the
# wild.
# 
# Also note that setting this parameter will _not_ have the effect
# that NeoMutt _generates_ this kind of encoding.  Instead, NeoMutt will
# unconditionally use the encoding specified in RFC2231.

# boolean save_address no
#
# If _set_, NeoMutt will take the sender's full address when choosing a
# default folder for saving a mail. If $$save_name or $$force_name
# is _set_ too, the selection of the Fcc folder will be changed as well.

# boolean save_empty yes
#
# When _unset_, mailboxes which contain no saved messages will be removed
# when closed (the exception is $$spoolfile which is never removed).
# If _set_, mailboxes are never removed.
# 
# **Note:** This only applies to mbox and MMDF folders, NeoMutt does not
# delete MH and Maildir directories.

# number save_history 100
#
# This variable controls the size of the history (per category) saved in the
# $$history_file file.

# boolean save_name no
#
# This variable controls how copies of outgoing messages are saved.
# When _set_, a check is made to see if a mailbox specified by the
# recipient address exists (this is done by searching for a mailbox in
# the $$folder directory with the _username_ part of the
# recipient address).  If the mailbox exists, the outgoing message will
# be saved to that mailbox, otherwise the message is saved to the
# $$record mailbox.
# 
# Also see the $$force_name variable.

# boolean save_unsubscribed no
#
# When _set_, info about unsubscribed newsgroups will be saved into
# "newsrc" file and into cache.

# boolean score yes
#
# When this variable is _unset_, scoring is turned off.  This can
# be useful to selectively disable scoring for certain folders when the
# $$score_threshold_delete variable and related are used.

# number score_threshold_delete -1
#
# Messages which have been assigned a score equal to or lower than the value
# of this variable are automatically marked for deletion by NeoMutt.  Since
# NeoMutt scores are always greater than or equal to zero, the default setting
# of this variable will never mark a message for deletion.

# number score_threshold_flag 9999
#
# Messages which have been assigned a score greater than or equal to this
# variable's value are automatically marked "flagged".

# number score_threshold_read -1
#
# Messages which have been assigned a score equal to or lower than the value
# of this variable are automatically marked as read by NeoMutt.  Since
# NeoMutt scores are always greater than or equal to zero, the default setting
# of this variable will never mark a message read.

# number search_context 5
#
# For the pager, this variable specifies the number of lines shown
# before search results. By default, search results will be top-aligned.

# string send_charset "us-ascii:iso-8859-1:utf-8"
#
# A colon-delimited list of character sets for outgoing messages. NeoMutt will use the
# first character set into which the text can be converted exactly.
# If your $$charset is not "iso-8859-1" and recipients may not
# understand "UTF-8", it is advisable to include in the list an
# appropriate widely used standard character set (such as
# "iso-8859-2", "koi8-r" or "iso-2022-jp") either instead of or after
# "iso-8859-1".
# 
# In case the text can't be converted into one of these exactly,
# NeoMutt uses $$charset as a fallback.

# string sendmail ""
#
# Specifies the program and arguments used to deliver mail sent by NeoMutt.
# NeoMutt expects that the specified program interprets additional
# arguments as recipient addresses.  NeoMutt appends all recipients after
# adding a `--` delimiter (if not already present).  Additional
# flags, such as for $$use_8bitmime, $$use_envelope_from,
# $$dsn_notify, or $$dsn_return will be added before the delimiter.
# 
# **See also:** $$write_bcc.

# number sendmail_wait 0
#
# Specifies the number of seconds to wait for the $$sendmail process
# to finish before giving up and putting delivery in the background.
# 
# NeoMutt interprets the value of this variable as follows:
# 
# | .  | Description |
# |----+--------------------------------------------------------------------|
# | >0 | number of seconds to wait for sendmail to finish before continuing |
# | 0  | wait forever for sendmail to finish |
# | <0 | always put sendmail in the background without waiting |
# 
# Note that if you specify a value other than 0, the output of the child
# process will be put in a temporary file.  If there is some error, you
# will be informed as to where to find the output.

# string shell "/bin/bash"
#
# Command to use when spawning a subshell.
# If not specified, then the user's login shell from `/etc/passwd` is used.

# string show_multipart_alternative ""
#
# When _set_ to `info`, the multipart/alternative information is shown.
# When _set_ to `inline`, all of the alternatives are displayed.
# When not set, the default behavior is to show only the chosen alternative.

# boolean show_new_news yes
#
# If _set_, news server will be asked for new newsgroups on entering
# the browser.  Otherwise, it will be done only once for a news server.
# Also controls whether or not number of new articles of subscribed
# newsgroups will be then checked.

# boolean show_only_unread no
#
# If _set_, only subscribed newsgroups that contain unread articles
# will be displayed in browser.

# number sidebar_component_depth 0
#
# By default the sidebar will show the mailbox's path, relative to the
# $$folder variable. This specifies the number of parent directories to hide
# from display in the sidebar. For example: If a maildir is normally
# displayed in the sidebar as dir1/dir2/dir3/maildir, setting
# `sidebar_component_depth=2` will display it as dir3/maildir, having
# truncated the 2 highest directories.
# 
# **See also:** $$sidebar_short_path

# string sidebar_delim_chars "/"
#
# This contains the list of characters which you would like to treat
# as folder separators for displaying paths in the sidebar.
# 
# Local mail is often arranged in directories: 'dir1/dir2/mailbox'.
# ```
# set sidebar_delim_chars='/'
# ```
# 
# IMAP mailboxes are often named: 'folder1.folder2.mailbox'.
# ```
# set sidebar_delim_chars='.'
# ```
# 
# **See also:** $$sidebar_short_path, $$sidebar_folder_indent, $$sidebar_indent_string.

# string sidebar_divider_char ""
#
# This specifies the characters to be drawn between the sidebar (when
# visible) and the other NeoMutt panels. ASCII and Unicode line-drawing
# characters are supported.

# boolean sidebar_folder_indent no
#
# Set this to indent mailboxes in the sidebar.
# 
# **See also:** $$sidebar_short_path, $$sidebar_indent_string, $$sidebar_delim_chars.

# string sidebar_format "%B%?F? [%F]?%* %?N?%N/?%?S?%S?"
#
# This variable allows you to customize the sidebar display. This string is
# similar to $$index_format, but has its own set of `printf(3)`-like
# sequences:
# 
# | .   | Description |
# |-----+---------------------------------------------------------------------------------------------------------------------------|
# | %B  | Name of the mailbox |
# | %D  | Description of the mailbox |
# | %S  | * Size of mailbox (total number of messages) |
# | %N  | * Number of unread messages in the mailbox |
# | %n  | N if mailbox has new mail, blank otherwise |
# | %F  | * Number of Flagged messages in the mailbox |
# | %!  | "!" : one flagged message; "!!" : two flagged messages; "n!" : n flagged messages (for n > 2).  Otherwise prints nothing. |
# | %d  | * @ Number of deleted messages |
# | %L  | * @ Number of messages after limiting |
# | %t  | * @ Number of tagged messages |
# | %>X | right justify the rest of the string and pad with "X" |
# | %|X | pad to the end of the line with "X" |
# | %*X | soft-fill with character "X" as pad |
# 
# * = Can be optionally printed if nonzero
# @ = Only applicable to the current folder
# 
# In order to use %S, %N, %F, and %!, $$mail_check_stats must
# be _set_.  When thus set, a suggested value for this option is
# "%B%?F? [%F]?%* %?N?%N/?%S".

# string sidebar_indent_string "  "
#
# This specifies the string that is used to indent mailboxes in the sidebar.
# It defaults to two spaces.
# 
# **See also:** $$sidebar_short_path, $$sidebar_folder_indent, $$sidebar_delim_chars.

# boolean sidebar_new_mail_only no
#
# When set, the sidebar will only display mailboxes containing new, or
# flagged, mail.
# 
# **See also:** $$sidebar_whitelist, $$sidebar_non_empty_mailbox_only.

# boolean sidebar_next_new_wrap no
#
# When set, the `<sidebar-next-new>` command will not stop and the end of
# the list of mailboxes, but wrap around to the beginning. The
# `<sidebar-prev-new>` command is similarly affected, wrapping around to
# the end of the list.

# boolean sidebar_non_empty_mailbox_only no
#
# When set, the sidebar will only display mailboxes that contain one or more mails.
# 
# **See also:** $$sidebar_new_mail_only, $$sidebar_whitelist.

# boolean sidebar_on_right no
#
# When set, the sidebar will appear on the right-hand side of the screen.

# boolean sidebar_short_path yes
#
# By default the sidebar will show the mailbox's path, relative to the
# $$folder variable. Setting `sidebar_shortpath=yes` will shorten the
# names relative to the previous name. Here's an example:
# 
# | shortpath=no   | shortpath=yes | shortpath=yes, folderindent=yes, indentstr=".." |
# |----------------+---------------+-------------------------------------------------|
# | `fruit`        | `fruit`       | `fruit` |
# | `fruit.apple`  | `apple`       | `..apple` |
# | `fruit.banana` | `banana`      | `..banana` |
# | `fruit.cherry` | `cherry`      | `..cherry` |
# 
# **See also:** $$sidebar_delim_chars, $$sidebar_folder_indent,
# $$sidebar_indent_string, $$sidebar_component_depth.

# sort sidebar_sort_method "alpha"
#
# Specifies how to sort entries in the file browser.  By default, the
# entries are sorted alphabetically.  Valid values:
# 
# - alpha (alphabetically)
# - count (all message count)
# - flagged (flagged message count)
# - name (alphabetically)
# - new (unread message count)
# - path (alphabetically)
# - unread (unread message count)
# - unsorted
# 
# You may optionally use the "reverse-" prefix to specify reverse sorting
# order (example: "`set sort_browser=reverse-date`").

# boolean sidebar_visible yes
#
# This specifies whether or not to show sidebar. The sidebar shows a list of
# all your mailboxes.
# 
# **See also:** $$sidebar_format, $$sidebar_width

# number sidebar_width 15
#
# This controls the width of the sidebar.  It is measured in screen columns.
# For example: sidebar_width=20 could display 20 ASCII characters, or 10
# Chinese characters.

# boolean sig_dashes yes
#
# If _set_, a line containing "-- " (note the trailing space) will be inserted before your
# $$signature.  It is **strongly** recommended that you not _unset_
# this variable unless your signature contains just your name.  The
# reason for this is because many software packages use "-- 
# " to
# detect your signature.  For example, NeoMutt has the ability to highlight
# the signature in a different color in the built-in pager.

# boolean sig_on_top no
#
# If _set_, the signature will be included before any quoted or forwarded
# text.  It is **strongly** recommended that you do not set this variable
# unless you really know what you are doing, and are prepared to take
# some heat from netiquette guardians.

# string signature "~/.signature"
#
# Specifies the filename of your signature, which is appended to all
# outgoing messages.   If the filename ends with a pipe ("|"), it is
# assumed that filename is a shell command and input should be read from
# its standard output.

# string simple_search "~f %s | ~s %s"
#
# Specifies how NeoMutt should expand a simple search into a real search
# pattern.  A simple search is one that does not contain any of the "~" pattern
# operators.  See "$patterns" for more information on search patterns.
# 
# For example, if you simply type "joe" at a search or limit prompt, NeoMutt
# will automatically expand it to the value specified by this variable by
# replacing "%s" with the supplied string.
# For the default value, "joe" would be expanded to: "~f joe | ~s joe".

# boolean size_show_bytes no
#
# If _set_, message sizes will display bytes for values less than
# 1 kilobyte.  See $formatstrings-size.

# boolean size_show_fractions yes
#
# If _set_, message sizes will be displayed with a single decimal value
# for sizes from 0 to 10 kilobytes and 1 to 10 megabytes.
# See $formatstrings-size.

# boolean size_show_mb yes
#
# If _set_, message sizes will display megabytes for values greater than
# or equal to 1 megabyte.  See $formatstrings-size.

# boolean size_units_on_left no
#
# If _set_, message sizes units will be displayed to the left of the number.
# See $formatstrings-size.

# number skip_quoted_offset 0
#
# Lines of quoted text that are displayed before the unquoted text after
# "skip to quoted" command (S)

# number sleep_time 0
#
# Specifies time, in seconds, to pause while displaying certain informational
# messages, while moving from folder to folder and after expunging
# messages from the current folder.  The default is to pause one second, so
# a value of zero for this option suppresses the pause.

# boolean smart_wrap yes
#
# Controls the display of lines longer than the screen width in the
# internal pager. If _set_, long lines are wrapped at a word boundary.  If
# _unset_, lines are simply wrapped at the screen edge. Also see the
# $$markers variable.

# regex smileys "(>From )|(:[-^]?[][)(><}{|/DP])"
#
# The _pager_ uses this variable to catch some common false
# positives of $$quote_regex, most notably smileys and not consider
# a line quoted text if it also matches $$smileys. This mostly
# happens at the beginning of a line.

# boolean smime_ask_cert_label yes
#
# This flag controls whether you want to be asked to enter a label
# for a certificate about to be added to the database or not. It is
# _set_ by default.
# (S/MIME only)

# string smime_ca_location ""
#
# This variable contains the name of either a directory, or a file which
# contains trusted certificates for use with OpenSSL.
# (S/MIME only)

# string smime_certificates ""
#
# Since for S/MIME there is no pubring/secring as with PGP, NeoMutt has to handle
# storage and retrieval of keys by itself. This is very basic right
# now, and keys and certificates are stored in two different
# directories, both named as the hash-value retrieved from
# OpenSSL. There is an index file which contains mailbox-address
# keyid pairs, and which can be manually edited. This option points to
# the location of the certificates.
# (S/MIME only)

# string smime_decrypt_command ""
#
# This format string specifies a command which is used to decrypt
# `application/x-pkcs7-mime` attachments.
# 
# The OpenSSL command formats have their own set of `printf(3)`-like sequences
# similar to PGP's:
# 
# | .  | Description |
# |----+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|
# | %f | Expands to the name of a file containing a message. |
# | %s | Expands to the name of a file containing the signature part of a `multipart/signed` attachment when verifying it. |
# | %k | The key-pair specified with $$smime_default_key |
# | %i | Intermediate certificates |
# | %c | One or more certificate IDs. |
# | %a | The algorithm used for encryption. |
# | %d | The message digest algorithm specified with $$smime_sign_digest_alg. |
# | %C | CA location:  Depending on whether $$smime_ca_location points to a directory or file, this expands to "-CApath $$smime_ca_location" or "-CAfile $$smime_ca_location". |
# 
# For examples on how to configure these formats, see the `smime.rc` in
# the `samples/` subdirectory which has been installed on your system
# alongside the documentation.
# (S/MIME only)

# boolean smime_decrypt_use_default_key yes
#
# If _set_ (default) this tells NeoMutt to use the default key for decryption. Otherwise,
# if managing multiple certificate-key-pairs, NeoMutt will try to use the mailbox-address
# to determine the key to use. It will ask you to supply a key, if it can't find one.
# (S/MIME only)

# string smime_default_key ""
#
# This is the default key-pair to use for S/MIME operations, and must be
# set to the keyid (the hash-value that OpenSSL generates) to work properly.
# 
# It will be used for encryption (see $$postpone_encrypt and
# $$smime_self_encrypt).
# 
# It will be used for decryption unless $$smime_decrypt_use_default_key
# is _unset_.
# 
# It will also be used for signing unless $$smime_sign_as is set.
# 
# The (now deprecated) _smime_self_encrypt_as_ is an alias for this
# variable, and should no longer be used.
# (S/MIME only)

# string smime_encrypt_command ""
#
# This command is used to create encrypted S/MIME messages.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)
# */
# /*
# 
# Encrypt the message to $$smime_default_key too.
# (S/MIME only)

# string smime_encrypt_with "aes256"
#
# This sets the algorithm that should be used for encryption.
# Valid choices are "aes128", "aes192", "aes256", "des", "des3", "rc2-40", "rc2-64", "rc2-128".
# (S/MIME only)

# string smime_get_cert_command ""
#
# This command is used to extract X509 certificates from a PKCS7 structure.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# string smime_get_cert_email_command ""
#
# This command is used to extract the mail address(es) used for storing
# X509 certificates, and for verification purposes (to check whether the
# certificate was issued for the sender's mailbox).
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# string smime_get_signer_cert_command ""
#
# This command is used to extract only the signers X509 certificate from a S/MIME
# signature, so that the certificate's owner may get compared to the
# email's "From:" field.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# string smime_import_cert_command ""
#
# This command is used to import a certificate via smime_keys.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.  NOTE: %c and %k will default
# to $$smime_sign_as if set, otherwise $$smime_default_key.
# (S/MIME only)

# boolean smime_is_default no
#
# The default behavior of NeoMutt is to use PGP on all auto-sign/encryption
# operations. To override and to use OpenSSL instead this must be _set_.
# However, this has no effect while replying, since NeoMutt will automatically
# select the same application that was used to sign/encrypt the original
# message.  (Note that this variable can be overridden by unsetting $$crypt_autosmime.)
# (S/MIME only)

# string smime_keys ""
#
# Since for S/MIME there is no pubring/secring as with PGP, NeoMutt has to handle
# storage and retrieval of keys/certs by itself. This is very basic right now,
# and stores keys and certificates in two different directories, both
# named as the hash-value retrieved from OpenSSL. There is an index file
# which contains mailbox-address keyid pair, and which can be manually
# edited. This option points to the location of the private keys.
# (S/MIME only)

# string smime_pk7out_command ""
#
# This command is used to extract PKCS7 structures of S/MIME signatures,
# in order to extract the public X509 certificate(s).
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# boolean smime_self_encrypt yes
#
# When _set_, S/MIME encrypted messages will also be encrypted
# using the certificate in $$smime_default_key.
# (S/MIME only)

# string smime_sign_as ""
#
# If you have a separate key to use for signing, you should set this
# to the signing key. Most people will only need to set $$smime_default_key.
# (S/MIME only)

# string smime_sign_command ""
#
# This command is used to created S/MIME signatures of type
# `multipart/signed`, which can be read by all mail clients.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# string smime_sign_digest_alg "sha256"
#
# This sets the algorithm that should be used for the signature message digest.
# Valid choices are "md5", "sha1", "sha224", "sha256", "sha384", "sha512".
# (S/MIME only)

# number smime_timeout 300
#
# The number of seconds after which a cached passphrase will expire if
# not used.
# (S/MIME only)

# string smime_verify_command ""
#
# This command is used to verify S/MIME signatures of type `multipart/signed`.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# string smime_verify_opaque_command ""
#
# This command is used to verify S/MIME signatures of type
# `application/x-pkcs7-mime`.
# 
# This is a format string, see the $$smime_decrypt_command command for
# possible `printf(3)`-like sequences.
# (S/MIME only)

# slist smtp_authenticators ""
#
# This is a colon-delimited list of authentication methods NeoMutt may
# attempt to use to log in to an SMTP server, in the order NeoMutt should
# try them.  Authentication methods are any SASL mechanism, e.g. "plain",
# "digest-md5", "gssapi" or "cram-md5".
# This option is case-insensitive. If it is "unset"
# (the default) NeoMutt will try all available methods, in order from
# most-secure to least-secure. Support for the "plain" mechanism is
# bundled; other mechanisms are provided by an external SASL library (look
# for +USE_SASL in the output of neomutt -v).
# 
# Example:
# ```
# set smtp_authenticators="digest-md5:cram-md5"
# ```

# string smtp_oauth_refresh_command ""
#
# The command to run to generate an OAUTH refresh token for
# authorizing your connection to your SMTP server.  This command will be
# run on every connection attempt that uses the OAUTHBEARER authentication
# mechanism.  See "$oauth" for details.

# string smtp_pass ""
#
# Specifies the password for your SMTP account.  If _unset_, NeoMutt will
# prompt you for your password when you first send mail via SMTP.
# See $$smtp_url to configure NeoMutt to send mail via SMTP.
# 
# **Warning**: you should only use this option when you are on a
# fairly secure machine, because the superuser can read your neomuttrc even
# if you are the only one who can read the file.

# string smtp_url "smtp://flatcap.org"
#
# Defines the SMTP smarthost where sent messages should relayed for
# delivery. This should take the form of an SMTP URL, e.g.:
# ```
# smtp[s]://[user[:pass]@]host[:port]
# ```
# 
# where "[...]" denotes an optional part.
# Setting this variable overrides the value of the $$sendmail
# variable.
# 
# Also see $$write_bcc.

# sort sort "threads"
#
# Specifies how to sort messages in the "index" menu.  Valid values
# are:
# 
# - date or date-sent
# - date-received
# - from
# - mailbox-order (unsorted)
# - score
# - size
# - spam
# - subject
# - threads
# - to
# 
# You may optionally use the "reverse-" prefix to specify reverse sorting
# order.
# 
# Example:
# ```
# set sort=reverse-date-sent
# ```

# sort sort_alias "alias"
#
# Specifies how the entries in the "alias" menu are sorted.  The
# following are legal values:
# 
# - address (sort alphabetically by email address)
# - alias (sort alphabetically by alias name)
# - unsorted (leave in order specified in .neomuttrc)

# sort sort_aux "last-date-received"
#
# This provides a secondary sort for messages in the "index" menu, used
# when the $$sort value is equal for two messages.
# 
# When sorting by threads, this variable controls how threads are sorted
# in relation to other threads, and how the branches of the thread trees
# are sorted.  This can be set to any value that $$sort can, except
# "threads" (in that case, NeoMutt will just use "date-sent").  You can also
# specify the "last-" prefix in addition to the "reverse-" prefix, but "last-"
# must come after "reverse-".  The "last-" prefix causes messages to be
# sorted against its siblings by which has the last descendant, using
# the rest of $$sort_aux as an ordering.  For instance,
# ```
# set sort_aux=last-date-received
# ```
# 
# would mean that if a new message is received in a
# thread, that thread becomes the last one displayed (or the first, if
# you have "`set sort=reverse-threads`".)
# 
# Note: For reversed-threads $$sort
# order, $$sort_aux is reversed again (which is not the right thing to do,
# but kept to not break any existing configuration setting).

# sort sort_browser "alpha"
#
# Specifies how to sort entries in the file browser.  By default, the
# entries are sorted alphabetically.  Valid values:
# 
# - alpha (alphabetically)
# - count (all message count)
# - date
# - desc (description)
# - new (new message count)
# - size
# - unsorted
# 
# You may optionally use the "reverse-" prefix to specify reverse sorting
# order (example: "`set sort_browser=reverse-date`").

# boolean sort_re yes
#
# This variable is only useful when sorting by mailboxes in sidebar. By default,
# entries are unsorted.  Valid values:
# 
# - count (all message count)
# - desc  (virtual mailbox description)
# - new (new message count)
# - path
# - unsorted

# string spam_separator ","
#
# This variable controls what happens when multiple spam headers
# are matched: if _unset_, each successive header will overwrite any
# previous matches value for the spam label. If _set_, each successive
# match will append to the previous, using this variable's value as a
# separator.

# string spoolfile "imaps://flatcap.org/INBOX"
#
# If your spool mailbox is in a non-default place where NeoMutt can't find
# it, you can specify its location with this variable. The description from
# "named-mailboxes" or "virtual-mailboxes" may be used for the spoolfile.
# 
# If not specified, then the environment variables `$$$MAIL` and
# `$$$MAILDIR` will be checked.

# string ssl_ca_certificates_file ""
#
# This variable specifies a file containing trusted CA certificates.
# Any server certificate that is signed with one of these CA
# certificates is also automatically accepted. (GnuTLS only)
# 
# Example:
# ```
# set ssl_ca_certificates_file=/etc/ssl/certs/ca-certificates.crt
# ```

# string ssl_ciphers ""
#
# Contains a colon-separated list of ciphers to use when using SSL.
# For OpenSSL, see ciphers(1) for the syntax of the string.
# 
# For GnuTLS, this option will be used in place of "NORMAL" at the
# start of the priority string.  See gnutls_priority_init(3) for the
# syntax and more details. (Note: GnuTLS version 2.1.7 or higher is
# required.)

# string ssl_client_cert ""
#
# The file containing a client certificate and its associated private
# key.

# boolean ssl_force_tls yes
#
# If this variable is _set_, NeoMutt will require that all connections
# to remote servers be encrypted. Furthermore it will attempt to
# negotiate TLS even if the server does not advertise the capability,
# since it would otherwise have to abort the connection anyway. This
# option supersedes $$ssl_starttls.

# number ssl_min_dh_prime_bits 0
#
# This variable specifies the minimum acceptable prime size (in bits)
# for use in any Diffie-Hellman key exchange. A value of 0 will use
# the default from the GNUTLS library. (GnuTLS only)

# quad ssl_starttls yes
#
# If _set_ (the default), NeoMutt will attempt to use `STARTTLS` on servers
# advertising the capability. When _unset_, NeoMutt will not attempt to
# use `STARTTLS` regardless of the server's capabilities.

# boolean ssl_use_sslv3 no
#
# If _set_ , NeoMutt will use SSLv3 when communicating with servers that
# request it. **N.B. As of 2015, SSLv3 is considered insecure, and using
# it is inadvisable. See https://tools.ietf.org/html/rfc7525 .**

# boolean ssl_use_tlsv1 no
#
# If _set_ , NeoMutt will use TLSv1.0 when communicating with servers that
# request it. **N.B. As of 2015, TLSv1.0 is considered insecure, and using
# it is inadvisable. See https://tools.ietf.org/html/rfc7525 .**

# boolean ssl_use_tlsv1_1 no
#
# If _set_ , NeoMutt will use TLSv1.1 when communicating with servers that
# request it. **N.B. As of 2015, TLSv1.1 is considered insecure, and using
# it is inadvisable. See https://tools.ietf.org/html/rfc7525 .**

# boolean ssl_use_tlsv1_2 yes
#
# If _set_ , NeoMutt will use TLSv1.2 when communicating with servers that
# request it.

# boolean ssl_use_tlsv1_3 yes
#
# If _set_ , NeoMutt will use TLSv1.3 when communicating with servers that
# request it.

# boolean ssl_verify_dates yes
#
# If _set_ (the default), NeoMutt will not automatically accept a server
# certificate that is either not yet valid or already expired. You should
# only unset this for particular known hosts, using the
# `$<account-hook>` function.

# boolean ssl_verify_host yes
#
# If _set_ (the default), NeoMutt will not automatically accept a server
# certificate whose host name does not match the host used in your folder
# URL. You should only unset this for particular known hosts, using
# the `$<account-hook>` function.

# mbtable status_chars "-*%A"
#
# Controls the characters used by the "%r" indicator in $$status_format.
# 
# | Character | Default | Description |
# |-----------+---------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
# | 1         | -       | Mailbox is unchanged |
# | 2         | *       | Mailbox has been changed and needs to be resynchronized |
# | 3         | %       | Mailbox is read-only, or will not be written when exiting.  (You can toggle whether to write changes to a mailbox with the `<toggle-write>` operation, bound by default to "%") |
# | 4         | A       | Folder opened in attach-message mode.  (Certain operations like composing a new mail, replying, forwarding, etc. are not permitted in this mode) |

# string status_format "%r-NeoMutt: %D [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]   (%s/%S) %> (%P)  "
#
# Controls the format of the status line displayed in the "index"
# menu.  This string is similar to $$index_format, but has its own
# set of `printf(3)`-like sequences:
# 
# | .   | Description |
# |-----+---------------------------------------------------------------------------------------------------------|
# | %b  | Number of mailboxes with new mail * |
# | %d  | Number of deleted messages * |
# | %D  | Description of the mailbox |
# | %f  | The full pathname of the current mailbox |
# | %F  | Number of flagged messages * |
# | %h  | Local hostname |
# | %l  | Size (in bytes) of the current mailbox (see $formatstrings-size) * |
# | %L  | Size (in bytes) of the messages shown (i.e., which match the current limit) (see $formatstrings-size) * |
# | %m  | The number of messages in the mailbox * |
# | %M  | The number of messages shown (i.e., which match the current limit) * |
# | %n  | Number of new messages in the mailbox * |
# | %o  | Number of old unread messages * |
# | %p  | Number of postponed messages * |
# | %P  | Percentage of the way through the index |
# | %r  | Modified/read-only/won't-write/attach-message indicator, According to $$status_chars |
# | %R  | Number of read messages * |
# | %s  | Current sorting mode ($$sort) |
# | %S  | Current aux sorting method ($$sort_aux) |
# | %t  | Number of tagged messages * |
# | %u  | Number of unread messages * |
# | %v  | NeoMutt version string |
# | %V  | Currently active limit pattern, if any * |
# | %>X | Right justify the rest of the string and pad with "X" |
# | %|X | Pad to the end of the line with "X" |
# | %*X | Soft-fill with character "X" as pad |
# 
# For an explanation of "soft-fill", see the $$index_format documentation.
# 
# * = can be optionally printed if nonzero
# 
# Some of the above sequences can be used to optionally print a string
# if their value is nonzero.  For example, you may only want to see the
# number of flagged messages if such messages exist, since zero is not
# particularly meaningful.  To optionally print a string based upon one
# of the above sequences, the following construct is used:
# 
#  `%?<sequence_char>?<optional_string>?`
# 
# where _sequence_char_ is a character from the table above, and
# _optional_string_ is the string you would like printed if
# _sequence_char_ is nonzero.  _optional_string_ **may** contain
# other sequences as well as normal text, but you may **not** nest
# optional strings.
# 
# Here is an example illustrating how to optionally print the number of
# new messages in a mailbox:
# 
# `%?n?%n new messages.?`
# 
# You can also switch between two strings using the following construct:
# 
# `%?<sequence_char>?<if_string>&<else_string>?`
# 
# If the value of _sequence_char_ is non-zero, _if_string_ will
# be expanded, otherwise _else_string_ will be expanded.
# 
# You can force the result of any `printf(3)`-like sequence to be lowercase
# by prefixing the sequence character with an underscore ("_") sign.
# For example, if you want to display the local hostname in lowercase,
# you would use: "`%_h`".
# 
# If you prefix the sequence character with a colon (":") character, NeoMutt
# will replace any dots in the expansion by underscores. This might be helpful
# with IMAP folders that don't like dots in folder names.

# boolean status_on_top no
#
# Setting this variable causes the "status bar" to be displayed on
# the first line of the screen rather than near the bottom. If $$help
# is _set_, too it'll be placed at the bottom.

# boolean strict_threads no
#
# If _set_, threading will only make use of the "In-Reply-To" and
# "References:" fields when you $$sort by message threads.  By
# default, messages with the same subject are grouped together in
# "pseudo threads.". This may not always be desirable, such as in a
# personal mailbox where you might have several unrelated messages with
# the subjects like "hi" which will get grouped together. See also
# $$sort_re for a less drastic way of controlling this
# behavior.

# boolean suspend yes
#
# When _unset_, NeoMutt won't stop when the user presses the terminal's
# _susp_ key, usually "^Z". This is useful if you run NeoMutt
# inside an xterm using a command like "`xterm -e neomutt`".

# boolean text_flowed no
#
# When _set_, NeoMutt will generate "format=flowed" bodies with a content type
# of "`text/plain; format=flowed`".
# This format is easier to handle for some mailing software, and generally
# just looks like ordinary text.  To actually make use of this format's
# features, you'll need support in your editor.
# 
# The option only controls newly composed messages.  Postponed messages,
# resent messages, and draft messages (via -H on the command line) will
# use the content-type of the source message.
# 
# Note that $$indent_string is ignored when this option is _set_.

# boolean thorough_search yes
#
# Affects the `~b` and `~h` search operations described in
# section "$patterns".  If _set_, the headers and body/attachments of
# messages to be searched are decoded before searching. If _unset_,
# messages are searched as they appear in the folder.
# 
# Users searching attachments or for non-ASCII characters should _set_
# this value because decoding also includes MIME parsing/decoding and possible
# character set conversions. Otherwise NeoMutt will attempt to match against the
# raw message received (for example quoted-printable encoded or with encoded
# headers) which may lead to incorrect search results.

# boolean thread_received no
#
# When _set_, NeoMutt uses the date received rather than the date sent
# to thread messages by subject.

# boolean tilde yes
#
# When _set_, the internal-pager will pad blank lines to the bottom of the
# screen with a tilde ("~").

# number time_inc 0
#
# Along with $$read_inc, $$write_inc, and $$net_inc, this
# variable controls the frequency with which progress updates are
# displayed. It suppresses updates less than $$time_inc milliseconds
# apart. This can improve throughput on systems with slow terminals,
# or when running NeoMutt on a remote system.
# 
# Also see the "$tuning" section of the manual for performance considerations.

# number timeout 10
#
# When NeoMutt is waiting for user input either idling in menus or
# in an interactive prompt, NeoMutt would block until input is
# present. Depending on the context, this would prevent certain
# operations from working, like checking for new mail or keeping
# an IMAP connection alive.
# 
# This variable controls how many seconds NeoMutt will at most wait
# until it aborts waiting for input, performs these operations and
# continues to wait for input.
# 
# A value of zero or less will cause NeoMutt to never time out.

# string tmpdir "/tmp/mutt"
#
# This variable allows you to specify where NeoMutt will place its
# temporary files needed for displaying and composing messages.
# 
# If this variable is not set, the environment variable `$$$TMPDIR` is
# used.  Failing that, then "`/tmp`" is used.

# mbtable to_chars " +TCFLR"
#
# Controls the character used to indicate mail addressed to you.
# 
# | Character | Default | Description |
# |-----------+---------+----------------------------------------------------------------------------------------------------|
# | 1         | <space> | The mail is _not_ addressed to your address. |
# | 2         | +       | You are the only recipient of the message. |
# | 3         | T       | Your address appears in the "To:" header field, but you are not the only recipient of the message. |
# | 4         | C       | Your address is specified in the "Cc:" header field, but you are not the only recipient. |
# | 5         | F       | Indicates the mail that was sent by _you_. |
# | 6         | L       | Indicates the mail was sent to a mailing-list you subscribe to. |
# | 7         | R       | Your address appears in the "Reply-To:" header field but none of the above applies. |

# number toggle_quoted_show_levels 0
#
# Quoted text may be filtered out using the `<toggle-quoted>` command.
# If set to a number greater than 0, then the `<toggle-quoted>`
# command will only filter out quote levels above this number.

# string trash "imaps://flatcap.org/trash"
#
# If set, this variable specifies the path of the trash folder where the
# mails marked for deletion will be moved, instead of being irremediably
# purged.
# 
# NOTE: When you delete a message in the trash folder, it is really
# deleted, so that you have a way to clean the trash.

# boolean ts_enabled yes
#
# Controls whether NeoMutt tries to set the terminal status line and icon name.
# Most terminal emulators emulate the status line in the window title.

# string ts_icon_format "M%?n?AIL&ail?"
#
# Controls the format of the icon title, as long as "$$ts_enabled" is set.
# This string is identical in formatting to the one used by
# "$$status_format".

# string ts_status_format "NeoMutt: (%n/%m)"
#
# Controls the format of the terminal status line (or window title),
# provided that "$$ts_enabled" has been set. This string is identical in
# formatting to the one used by "$$status_format".

# string tunnel ""
#
# Setting this variable will cause NeoMutt to open a pipe to a command
# instead of a raw socket. You may be able to use this to set up
# preauthenticated connections to your IMAP/POP3/SMTP server. Example:
# ```
# set tunnel="ssh -q mailhost.net /usr/local/libexec/imapd"
# ```
# 
# Note: For this example to work you must be able to log in to the remote
# machine without having to enter a password.
# 
# When set, NeoMutt uses the tunnel for all remote connections.
# Please see "$account-hook" in the manual for how to use different
# tunnel commands per connection.

# boolean uncollapse_jump no
#
# When _set_, NeoMutt will jump to the next unread message, if any,
# when the current thread is _un_collapsed.

# boolean uncollapse_new yes
#
# When _set_, NeoMutt will automatically uncollapse any collapsed thread
# that receives a new message. When _unset_, collapsed threads will
# remain collapsed. the presence of the new message will still affect
# index sorting, though.

# boolean use_8bitmime no
#
# **Warning:** do not set this variable unless you are using a version
# of sendmail which supports the `-B8BITMIME` flag (such as sendmail
# 8.8.x) or you may not be able to send mail.
# 
# When _set_, NeoMutt will invoke $$sendmail with the `-B8BITMIME`
# flag when sending 8-bit messages to enable ESMTP negotiation.

# boolean use_domain yes
#
# When _set_, NeoMutt will qualify all local addresses (ones without the
# "@host" portion) with the value of $$hostname.  If _unset_, no
# addresses will be qualified.

# boolean use_envelope_from no
#
# When _set_, NeoMutt will set the _envelope_ sender of the message.
# If $$envelope_from_address is _set_, it will be used as the sender
# address. If _unset_, NeoMutt will attempt to derive the sender from the
# "From:" header.
# 
# Note that this information is passed to sendmail command using the
# `-f` command line switch. Therefore setting this option is not useful
# if the $$sendmail variable already contains `-f` or if the
# executable pointed to by $$sendmail doesn't support the `-f` switch.

# boolean use_from yes
#
# When _set_, NeoMutt will generate the "From:" header field when
# sending messages.  If _unset_, no "From:" header field will be
# generated unless the user explicitly sets one using the "$my_hdr"
# command.

# boolean use_ipv6 yes
#
# When _set_, NeoMutt will look for IPv6 addresses of hosts it tries to
# contact.  If this option is _unset_, NeoMutt will restrict itself to IPv4 addresses.
# Normally, the default should work.

# boolean user_agent yes
#
# When _set_, NeoMutt will add a "User-Agent:" header to outgoing
# messages, indicating which version of NeoMutt was used for composing
# them.

# string vfolder_format "%2C %?n?%4n/&     ?%4m %f"
#
# This variable allows you to customize the file browser display for virtual
# folders to your personal taste.  This string uses many of the same
# expandos as $$folder_format.

# boolean virtual_spoolfile no
#
# When _set_, NeoMutt will use the first defined virtual mailbox (see
# virtual-mailboxes) as a spool file.
# **
# This command is now unnecessary. $$spoolfile has been extended to support
# mailbox descriptions as a value.

# string visual "/usr/bin/nvim"
#
# Specifies the visual editor to invoke when the "`~v`" command is
# given in the built-in editor.
# 
# $$visual is overridden by the environment variable `$$$VISUAL` or `$$$EDITOR`.

# boolean wait_key no
#
# Controls whether NeoMutt will ask you to press a key after an external command
# has been invoked by these functions: `<shell-escape>`,
# `<pipe-message>`, `<pipe-entry>`, `<print-message>`,
# and `<print-entry>` commands.
# 
# It is also used when viewing attachments with "$auto_view", provided
# that the corresponding mailcap entry has a _needsterminal_ flag,
# and the external program is interactive.
# 
# When _set_, NeoMutt will always ask for a key. When _unset_, NeoMutt will wait
# for a key only if the external command returned a non-zero status.

# boolean weed yes
#
# When _set_, NeoMutt will weed headers when displaying, forwarding,
# printing, or replying to messages.

# number wrap 0
#
# When set to a positive value, NeoMutt will wrap text at $$wrap characters.
# When set to a negative value, NeoMutt will wrap text so that there are $$wrap
# characters of empty space on the right side of the terminal. Setting it
# to zero makes NeoMutt wrap at the terminal width.
# 
# Also see $$reflow_wrap.

# number wrap_headers 78
#
# This option specifies the number of characters to use for wrapping
# an outgoing message's headers. Allowed values are between 78 and 998
# inclusive.
# 
# **Note:** This option usually shouldn't be changed. RFC5233
# recommends a line length of 78 (the default), so **please only change
# this setting when you know what you're doing**.

# boolean wrap_search yes
#
# Controls whether searches wrap around the end.
# 
# When _set_, searches will wrap around the first (or last) item. When
# _unset_, incremental searches will not wrap.

# boolean write_bcc no
#
# Controls whether mutt writes out the ``Bcc:'' header when
# preparing messages to be sent.  Some MTAs, such as Exim and
# Courier, do not strip the ``Bcc:'' header; so it is advisable to
# leave this unset unless you have a particular need for the header
# to be in the sent message.
# 
# If mutt is set to deliver directly via SMTP(see $$smtp_url),
# this option does nothing: mutt will never write out the ``Bcc:''
# header in this case.
# 
# Note this option only affects the sending of messages.  Fcc'ed
# copies of a message will always contain the ``Bcc:'' header if
# one exists.

# number write_inc 10
#
# When writing a mailbox, a message will be printed every
# $$write_inc messages to indicate progress.  If set to 0, only a
# single message will be displayed before writing a mailbox.
# 
# Also see the $$read_inc, $$net_inc and $$time_inc variables and the
# "$tuning" section of the manual for performance considerations.

# boolean x_comment_to no
#
# If _set_, NeoMutt will add "X-Comment-To:" field (that contains full
# name of original article author) to article that followuped to newsgroup.

